{
  "version": 3,
  "sources": ["src/app/assessments/create-assessment/create-assessment.component.ts", "src/app/assessments/create-assessment/create-assessment.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ApiService, AssessmentStepPayload, Job } from '../../api.service';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-assessment',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterLink],\r\n  templateUrl: './create-assessment.component.html',\r\n  styleUrls: ['./create-assessment.component.css']\r\n})\r\nexport class CreateAssessmentComponent implements OnInit {\r\n  jobs: Job[] = [];\r\n  loadingJobs = false;\r\n  selectedJobId: number | null = null;\r\n  steps: Omit<AssessmentStepPayload, 'jobId'>[] = [\r\n    { stepOrder: 1, stepName: '', mode: '', passingCriteria: '' }\r\n  ];\r\n  loading = false;\r\n  success = false;\r\n  error: string | null = null;\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadJobs();\r\n  }\r\n\r\n  loadJobs() {\r\n    this.loadingJobs = true;\r\n    this.apiService.getJobs().subscribe({\r\n      next: (jobs) => {\r\n        this.jobs = jobs.filter(job => job.isActive);\r\n        this.loadingJobs = false;\r\n        // Optionally, set default selectedJobId\r\n        if (this.jobs.length > 0) {\r\n          this.selectedJobId = this.jobs[0].id!;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.jobs = ApiService.getFallbackJobs().filter(job => job.isActive);\r\n        this.loadingJobs = false;\r\n        if (this.jobs.length > 0) {\r\n          this.selectedJobId = this.jobs[0].id!;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedJob(): Job | undefined {\r\n    return this.jobs.find(job => job.id === this.selectedJobId);\r\n  }\r\n\r\n  addStep() {\r\n    this.steps.push({ stepOrder: this.steps.length + 1, stepName: '', mode: '', passingCriteria: '' });\r\n  }\r\n\r\n  removeStep(index: number) {\r\n    if (this.steps.length > 1) this.steps.splice(index, 1);\r\n  }\r\n\r\n  submit() {\r\n    if (!this.selectedJobId) {\r\n      this.error = 'Please select a job.';\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.success = false;\r\n    this.error = null;\r\n    // Attach jobId to each step before sending\r\n    const payload: AssessmentStepPayload[] = this.steps.map(step => ({ ...step, jobId: Number(this.selectedJobId) }));\r\n    this.apiService.createAssessment(payload).subscribe({\r\n      next: () => {\r\n        this.loading = false;\r\n        this.success = true;\r\n      },\r\n      error: (err) => {\r\n        this.loading = false;\r\n        this.error = err;\r\n      }\r\n    });\r\n  }\r\n}\r\n", "<div class=\"create-assessment-bg d-flex align-items-center justify-content-center min-vh-90 w-100\">\r\n  <div class=\"create-assessment-card p-5 shadow-lg w-100\">\r\n    <div class=\"text-center mb-4\">\r\n      <div class=\"brand-icon mb-2\">\r\n        <i class=\"fas fa-clipboard-list\"></i>\r\n      </div>\r\n      <h2 class=\"brand-heading mb-1\">Create Assessment</h2>\r\n      <div class=\"brand-subheading mb-3\">Add steps for the assessment below</div>\r\n    </div>\r\n    <div *ngIf=\"loading\" class=\"alert alert-info\">\r\n      <i class=\"fas fa-spinner fa-spin me-2\"></i>Creating assessment...\r\n    </div>\r\n    <div *ngIf=\"success\" class=\"alert alert-success\">\r\n      <i class=\"fas fa-check-circle me-2\"></i>Assessment created successfully!\r\n    </div>\r\n    <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>{{ error }}\r\n    </div>\r\n    <form (ngSubmit)=\"submit()\">\r\n      <div class=\"row g-4\">\r\n        <!-- Job Selection Dropdown -->\r\n        <div class=\"col-md-6\">\r\n          <label class=\"form-label\">Select Job Position <span class=\"text-danger\">*</span></label>\r\n          <select class=\"form-select\" name=\"jobId\" [(ngModel)]=\"selectedJobId\" required\r\n            [disabled]=\"loading || loadingJobs\">\r\n            <option value=\"\">-- Select Job --</option>\r\n            <option *ngFor=\"let job of jobs\" [value]=\"job.id\">\r\n              {{ job.title }} - {{ job.role }} ({{ job.location }})\r\n            </option>\r\n          </select>\r\n          <div class=\"form-text\" *ngIf=\"loadingJobs\">Loading available jobs...</div>\r\n        </div>\r\n        <!-- Selected Job Info -->\r\n        <div class=\"col-md-6\" *ngIf=\"getSelectedJob()\">\r\n          <label class=\"form-label\">Job Details</label>\r\n          <div class=\"form-control-plaintext bg-light p-2 rounded\">\r\n            <small>\r\n              <strong>{{ getSelectedJob()?.title }}</strong><br>\r\n              Department: {{ getSelectedJob()?.role }}<br>\r\n              Location: {{ getSelectedJob()?.location }}<br>\r\n              Type: {{ getSelectedJob()?.type }}\r\n            </small>\r\n          </div>\r\n        </div>\r\n        <div class=\"w-100\"></div>\r\n        <div class=\"col-12\" *ngFor=\"let step of steps; let i = index\">\r\n          <div class=\"step-card p-3 mb-2 rounded-3 shadow-sm position-relative\">\r\n            <div class=\"row g-3 align-items-end\">\r\n              <div class=\"col-md-2\">\r\n                <label class=\"form-label\">Step Order</label>\r\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"step.stepOrder\" name=\"stepOrder{{i}}\" min=\"1\"\r\n                  required>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">Step Title</label>\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"step.stepName\" name=\"stepName{{i}}\"\r\n                  placeholder=\"e.g. Technical Interview\" list=\"stepNameOptions\" required>\r\n                <datalist id=\"stepNameOptions\">\r\n                  <option value=\"Resume Screening\"></option>\r\n                  <option value=\"Technical Interview\"></option>\r\n                  <option value=\"Managerial Round\"></option>\r\n                  <option value=\"HR Round\"></option>\r\n                  <option value=\"Coding Test\"></option>\r\n                  <option value=\"Group Discussion\"></option>\r\n                </datalist>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">Mode of Assessment</label>\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"step.mode\" name=\"mode{{i}}\" list=\"modeOptions\"\r\n                  placeholder=\"e.g. Video Conferencing\" required>\r\n                <datalist id=\"modeOptions\">\r\n                  <option value=\"ATS\"></option>\r\n                  <option value=\"In-Person\"></option>\r\n                  <option value=\"Video Conferencing\"></option>\r\n                  <option value=\"Phone\"></option>\r\n                </datalist>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">Passing Criteria (%)</label>\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"step.passingCriteria\" name=\"passingCriteria{{i}}\"\r\n                  placeholder=\"e.g. 70\" required>\r\n              </div>\r\n              <div class=\"col-md-1 d-flex align-items-center justify-content-end\">\r\n                <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"removeStep(i)\"\r\n                  [disabled]=\"steps.length === 1\" title=\"Remove Step\">\r\n                  <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-end mb-3\">\r\n          <button type=\"button\" class=\"btn brand-outline-btn\" (click)=\"addStep()\">\r\n            <i class=\"fas fa-plus me-1\"></i> Add Step\r\n          </button>\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-between align-items-center mt-4\">\r\n          <a routerLink=\"/assessments\" class=\"btn brand-green-btn\">Back to Assessments</a>\r\n          <button type=\"submit\" class=\"btn brand-green-btn px-4\" [disabled]=\"loading || !selectedJobId\">Create\r\n            Assessment</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "error", "\u0275\u0275property", "job_r2", "id", "\u0275\u0275textInterpolate3", "title", "role", "location", "\u0275\u0275textInterpolate", "tmp_1_0", "getSelectedJob", "tmp_2_0", "tmp_3_0", "tmp_4_0", "type", "\u0275\u0275twoWayListener", "$event", "step_r4", "\u0275\u0275restoreView", "_r3", "$implicit", "i0", "\u0275\u0275twoWayBindingSet", "stepOrder", "\u0275\u0275resetView", "stepName", "mode", "passingCriteria", "\u0275\u0275listener", "i_r5", "index", "\u0275\u0275nextContext", "removeStep", "\u0275\u0275propertyInterpolate1", "\u0275\u0275twoWayProperty", "steps", "length", "CreateAssessmentComponent", "apiService", "jobs", "loadingJobs", "selectedJobId", "loading", "success", "constructor", "ngOnInit", "loadJobs", "getJobs", "subscribe", "next", "filter", "job", "isActive", "ApiService", "getFallbackJobs", "find", "addStep", "push", "splice", "submit", "payload", "map", "step", "__spreadProps", "__spreadValues", "jobId", "Number", "createAssessment", "err", "\u0275\u0275directiveInject", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CreateAssessmentComponent_div_9_Template", "CreateAssessmentComponent_div_10_Template", "CreateAssessmentComponent_div_11_Template", "CreateAssessmentComponent_option_22_Template", "CreateAssessmentComponent_div_23_Template", "CreateAssessmentComponent_div_24_Template", "CreateAssessmentComponent_div_26_Template", "CommonModule", "NgForOf", "NgIf", "FormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "NumberValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "MinValidator", "NgModel", "NgForm", "RouterLink", "styles"]
}
