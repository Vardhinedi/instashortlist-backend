{
  "version": 3,
  "sources": ["src/app/assessments/create-assessment/create-assessment.component.ts", "src/app/assessments/create-assessment/create-assessment.component.html"],
  "sourcesContent": ["import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiService, AssessmentStepPayload } from '../../api.service';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-create-assessment',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterLink],\r\n  templateUrl: './create-assessment.component.html',\r\n  styleUrls: ['./create-assessment.component.css']\r\n})\r\nexport class CreateAssessmentComponent implements OnInit {\r\n  assessmentTitle: string = '';\r\n  steps: Omit<AssessmentStepPayload, 'title'>[] = [\r\n    { stepOrder: 1, stepName: '', mode: '', passingCriteria: '' }\r\n  ];\r\n  loading = false;\r\n  success = false;\r\n  error: string | null = null;\r\n\r\n  // Dropdown state management\r\n  activeStepDropdown: number | null = null;\r\n  activeModeDropdown: number | null = null;\r\n  filteredStepNames: { [key: number]: string[] } = {};\r\n  filteredModeNames: { [key: number]: string[] } = {};\r\n\r\n  stepNameOptions = [\r\n    'Resume Screening',\r\n    'Technical Interview',\r\n    'Managerial Round',\r\n    'HR Round',\r\n    'Coding Test',\r\n    'Group Discussion',\r\n    'Case Study',\r\n    'Aptitude Test',\r\n    'Psychometric Test',\r\n    'Portfolio Review',\r\n    'Assignment Evaluation',\r\n    'Presentation Round',\r\n    'Background Verification',\r\n    'Offer Discussion',\r\n    'Reference Check'\r\n  ];\r\n\r\n  modeOptions = [\r\n    'Manual', \r\n    'AI Enabled'\r\n  ];\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    // Initialize filtered options for existing steps\r\n    this.steps.forEach((_, index) => {\r\n      this.filteredStepNames[index] = [...this.stepNameOptions];\r\n      this.filteredModeNames[index] = [...this.modeOptions];\r\n    });\r\n  }\r\n\r\n  addStep() {\r\n    const newIndex = this.steps.length;\r\n    this.steps.push({ stepOrder: this.steps.length + 1, stepName: '', mode: '', passingCriteria: '' });\r\n    // Initialize filtered options for the new step\r\n    this.filteredStepNames[newIndex] = [...this.stepNameOptions];\r\n    this.filteredModeNames[newIndex] = [...this.modeOptions];\r\n  }\r\n\r\n  removeStep(index: number) {\r\n    if (this.steps.length > 1) {\r\n      this.steps.splice(index, 1);\r\n      // Clean up filtered options\r\n      delete this.filteredStepNames[index];\r\n      delete this.filteredModeNames[index];\r\n      // Reindex remaining filtered options\r\n      const newFilteredStepNames: { [key: number]: string[] } = {};\r\n      const newFilteredModeNames: { [key: number]: string[] } = {};\r\n      this.steps.forEach((_, i) => {\r\n        const oldIndex = i < index ? i : i + 1;\r\n        newFilteredStepNames[i] = this.filteredStepNames[oldIndex] || [...this.stepNameOptions];\r\n        newFilteredModeNames[i] = this.filteredModeNames[oldIndex] || [...this.modeOptions];\r\n      });\r\n      this.filteredStepNames = newFilteredStepNames;\r\n      this.filteredModeNames = newFilteredModeNames;\r\n    }\r\n  }\r\n\r\n  // Step dropdown methods\r\n  toggleStepDropdown(index: number, show: boolean) {\r\n    this.activeStepDropdown = show ? index : null;\r\n    if (show) {\r\n      this.activeModeDropdown = null; // Close mode dropdown\r\n      this.filteredStepNames[index] = [...this.stepNameOptions];\r\n    }\r\n  }\r\n\r\n  filterStepOptions(event: any, index: number) {\r\n    const query = event.target.value.toLowerCase();\r\n    this.filteredStepNames[index] = this.stepNameOptions.filter(option =>\r\n      option.toLowerCase().includes(query)\r\n    );\r\n  }\r\n\r\n  selectStepOption(option: string, index: number) {\r\n    this.steps[index].stepName = option;\r\n    this.activeStepDropdown = null;\r\n  }\r\n\r\n  getFilteredStepOptions(index: number): string[] {\r\n    return this.filteredStepNames[index] || this.stepNameOptions;\r\n  }\r\n\r\n  // Mode dropdown methods\r\n  toggleModeDropdown(index: number, show: boolean) {\r\n    this.activeModeDropdown = show ? index : null;\r\n    if (show) {\r\n      this.activeStepDropdown = null; // Close step dropdown\r\n      this.filteredModeNames[index] = [...this.modeOptions];\r\n    }\r\n  }\r\n\r\n  filterModeOptions(event: any, index: number) {\r\n    const query = event.target.value.toLowerCase();\r\n    this.filteredModeNames[index] = this.modeOptions.filter(option =>\r\n      option.toLowerCase().includes(query)\r\n    );\r\n  }\r\n\r\n  selectModeOption(option: string, index: number) {\r\n    this.steps[index].mode = option;\r\n    this.activeModeDropdown = null;\r\n  }\r\n\r\n  getFilteredModeOptions(index: number): string[] {\r\n    return this.filteredModeNames[index] || this.modeOptions;\r\n  }\r\n\r\n  // Close dropdowns when clicking outside\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n    if (!target.closest('.custom-dropdown-wrapper')) {\r\n      this.activeStepDropdown = null;\r\n      this.activeModeDropdown = null;\r\n    }\r\n  }\r\n\r\n  moveStepUp(index: number) {\r\n  if (index > 0) {\r\n    const temp = this.steps[index];\r\n    this.steps[index] = this.steps[index - 1];\r\n    this.steps[index - 1] = temp;\r\n    \r\n    // Force Angular to rebind form controls\r\n    setTimeout(() => {\r\n      this.updateFilteredOptions();\r\n    }, 0);\r\n  }\r\n}\r\n\r\nmoveStepDown(index: number) {\r\n  if (index < this.steps.length - 1) {\r\n    const temp = this.steps[index];\r\n    this.steps[index] = this.steps[index + 1];\r\n    this.steps[index + 1] = temp;\r\n    \r\n    // Force Angular to rebind form controls\r\n    setTimeout(() => {\r\n      this.updateFilteredOptions();\r\n    }, 0);\r\n  }\r\n}\r\n\r\ntrackByIndex(index: number): number {\r\n  return index;\r\n}\r\n\r\nprivate updateFilteredOptions() {\r\n  const newFilteredStepNames: { [key: number]: string[] } = {};\r\n  const newFilteredModeNames: { [key: number]: string[] } = {};\r\n  \r\n  this.steps.forEach((_, i) => {\r\n    newFilteredStepNames[i] = [...this.stepNameOptions];\r\n    newFilteredModeNames[i] = [...this.modeOptions];\r\n  });\r\n  \r\n  this.filteredStepNames = newFilteredStepNames;\r\n  this.filteredModeNames = newFilteredModeNames;\r\n}\r\n\r\n  submit() {\r\n    if (!this.assessmentTitle.trim()) {\r\n      this.error = 'Please enter an assessment title.';\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.success = false;\r\n    this.error = null;\r\n    // Attach title to each step before sending\r\n    const payload: AssessmentStepPayload[] = this.steps.map(step => ({\r\n      ...step,\r\n      title: this.assessmentTitle.trim()\r\n    }));\r\n    this.apiService.createAssessment(payload).subscribe({\r\n      next: () => {\r\n        this.loading = false;\r\n        this.success = true;\r\n      },\r\n      error: (err) => {\r\n        this.loading = false;\r\n        this.error = err;\r\n      }\r\n    });\r\n  }\r\n}", "<div class=\"create-assessment-bg d-flex align-items-center justify-content-center min-vh-90 w-100\">\r\n  <div class=\"create-assessment-card p-5 shadow-lg w-100\">\r\n    <div class=\"text-center mb-4\">\r\n      <div class=\"brand-icon mb-2\">\r\n        <i class=\"fas fa-clipboard-list\"></i>\r\n      </div>\r\n      <h2 class=\"brand-heading mb-1\">Create Assessment</h2>\r\n      <div class=\"brand-subheading mb-3\">Add steps for the assessment below</div>\r\n    </div>\r\n    <div *ngIf=\"loading\" class=\"alert alert-info\">\r\n      <i class=\"fas fa-spinner fa-spin me-2\"></i>Creating assessment...\r\n    </div>\r\n    <div *ngIf=\"success\" class=\"alert alert-success\">\r\n      <i class=\"fas fa-check-circle me-2\"></i>Assessment created successfully!\r\n    </div>\r\n    <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>{{ error }}\r\n    </div>\r\n    <form (ngSubmit)=\"submit()\">\r\n      <div class=\"row g-4\">\r\n        <!-- Assessment Title Input -->\r\n        <div class=\"col-md-6 w-100\">\r\n          <label class=\"form-label\">Assessment Title <span class=\"text-danger\">*</span></label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control w-100\"\r\n            name=\"assessmentTitle\"\r\n            [(ngModel)]=\"assessmentTitle\"\r\n            required\r\n            placeholder=\"Enter assessment title\"\r\n            [disabled]=\"loading\"\r\n          >\r\n        </div>\r\n        <div class=\"w-100\"></div>\r\n\r\n<!-- Updated HTML Template for Step Cards -->\r\n<div class=\"col-12\" *ngFor=\"let step of steps; let i = index; trackBy: trackByIndex\">\r\n  <div class=\"step-card-wrapper\">\r\n    <!-- Delete button positioned at top right -->\r\n    <button type=\"button\" class=\"step-delete-btn\" (click)=\"removeStep(i)\"\r\n            [disabled]=\"steps.length === 1\" title=\"Remove Step\">\r\n      <i class=\"fas fa-times\"></i>\r\n    </button>\r\n    \r\n    <div class=\"step-card\">\r\n      <div class=\"step-content\">\r\n        <!-- Step number and inputs in clean row -->\r\n        <div class=\"step-main-row\">\r\n          <div class=\"step-number-col\">\r\n            <label class=\"form-label\">Step</label>\r\n            <div class=\"step-number-display\">\r\n              {{ i + 1 }}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"step-inputs-col\">\r\n            <div class=\"input-group\">\r\n              <label class=\"form-label\">Step Title <span class=\"text-danger\">*</span></label>\r\n              <div class=\"custom-dropdown-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control custom-dropdown-input\"\r\n                  [(ngModel)]=\"step.stepName\"\r\n                  name=\"stepName{{i}}\"\r\n                  placeholder=\"Enter or select step title\"\r\n                  required\r\n                  (focus)=\"toggleStepDropdown(i, true)\"\r\n                  (input)=\"filterStepOptions($event, i)\"\r\n                >\r\n                <div class=\"dropdown-arrow\">\r\n                  <i class=\"fas fa-chevron-down\"></i>\r\n                </div>\r\n                <div class=\"custom-dropdown-menu\" [class.show]=\"activeStepDropdown === i\">\r\n                  <div \r\n                    *ngFor=\"let option of getFilteredStepOptions(i)\"\r\n                    class=\"dropdown-option\"\r\n                    (click)=\"selectStepOption(option, i)\"\r\n                  >\r\n                    {{ option }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"input-group\">\r\n              <label class=\"form-label\">Mode <span class=\"text-danger\">*</span></label>\r\n              <div class=\"custom-dropdown-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control custom-dropdown-input\"\r\n                  [(ngModel)]=\"step.mode\"\r\n                  name=\"mode{{i}}\"\r\n                  placeholder=\"Enter or select mode\"\r\n                  required\r\n                  (focus)=\"toggleModeDropdown(i, true)\"\r\n                  (input)=\"filterModeOptions($event, i)\"\r\n                >\r\n                <div class=\"dropdown-arrow\">\r\n                  <i class=\"fas fa-chevron-down\"></i>\r\n                </div>\r\n                <div class=\"custom-dropdown-menu\" [class.show]=\"activeModeDropdown === i\">\r\n                  <div \r\n                    *ngFor=\"let option of getFilteredModeOptions(i)\"\r\n                    class=\"dropdown-option\"\r\n                    (click)=\"selectModeOption(option, i)\"\r\n                  >\r\n                    {{ option }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"input-group\">\r\n              <label class=\"form-label\">Pass % <span class=\"text-danger\">*</span></label>\r\n              <input type=\"number\" class=\"form-control\" [(ngModel)]=\"step.passingCriteria\" \r\n                     name=\"passingCriteria{{i}}\" min=\"0\" max=\"100\" required>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Centered arrow controls -->\r\n        <div class=\"step-arrows-center\">\r\n          <button type=\"button\" class=\"step-arrow-btn step-arrow-up\" \r\n                  (click)=\"moveStepUp(i)\" [disabled]=\"i === 0\" title=\"Move Up\">\r\n            <i class=\"fas fa-chevron-up\"></i>\r\n          </button>\r\n          <button type=\"button\" class=\"step-arrow-btn step-arrow-down\" \r\n                  (click)=\"moveStepDown(i)\" [disabled]=\"i === steps.length - 1\" title=\"Move Down\">\r\n            <i class=\"fas fa-chevron-down\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"col-12 d-flex justify-content-end mb-3\">\r\n          <button type=\"button\" class=\"btn brand-outline-btn\" (click)=\"addStep()\">\r\n            <i class=\"fas fa-plus me-1\"></i> Add Step\r\n          </button>\r\n        </div>\r\n        <div class=\"col-12 d-flex justify-content-between align-items-center mt-4\">\r\n          <a routerLink=\"/assessments\" class=\"btn brand-green-btn\">Back to Assessments</a>\r\n          <button type=\"submit\" class=\"btn brand-green-btn px-4\" [disabled]=\"loading\">Create Assessment</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "error", "\u0275\u0275listener", "option_r6", "\u0275\u0275restoreView", "_r5", "$implicit", "i_r3", "\u0275\u0275nextContext", "index", "\u0275\u0275resetView", "selectStepOption", "option_r8", "_r7", "selectModeOption", "_r2", "removeStep", "\u0275\u0275twoWayListener", "$event", "step_r4", "i0", "\u0275\u0275twoWayBindingSet", "stepName", "toggleStepDropdown", "filterStepOptions", "\u0275\u0275template", "CreateAssessmentComponent_div_21_div_23_Template", "mode", "toggleModeDropdown", "filterModeOptions", "CreateAssessmentComponent_div_21_div_34_Template", "passingCriteria", "moveStepUp", "moveStepDown", "\u0275\u0275property", "steps", "length", "\u0275\u0275propertyInterpolate1", "\u0275\u0275twoWayProperty", "\u0275\u0275classProp", "activeStepDropdown", "getFilteredStepOptions", "activeModeDropdown", "getFilteredModeOptions", "CreateAssessmentComponent", "apiService", "assessmentTitle", "stepOrder", "loading", "success", "filteredStepNames", "filteredModeNames", "stepNameOptions", "modeOptions", "constructor", "ngOnInit", "forEach", "_", "addStep", "newIndex", "push", "splice", "newFilteredStepNames", "newFilteredModeNames", "i", "oldIndex", "show", "event", "query", "target", "value", "toLowerCase", "filter", "option", "includes", "onDocumentClick", "closest", "temp", "setTimeout", "updateFilteredOptions", "trackByIndex", "submit", "trim", "payload", "map", "step", "__spreadProps", "__spreadValues", "title", "createAssessment", "subscribe", "next", "err", "\u0275\u0275directiveInject", "ApiService", "selectors", "hostBindings", "rf", "ctx", "\u0275\u0275resolveDocument", "CreateAssessmentComponent_div_9_Template", "CreateAssessmentComponent_div_10_Template", "CreateAssessmentComponent_div_11_Template", "CreateAssessmentComponent_div_21_Template", "CommonModule", "NgForOf", "NgIf", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "MinValidator", "MaxValidator", "NgModel", "NgForm", "RouterLink", "styles"]
}
