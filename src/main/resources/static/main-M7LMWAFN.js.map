{
  "version": 3,
  "sources": ["src/app/auth.service.ts", "src/app/login/login.component.ts", "src/app/login/login.component.html", "src/app/register/register.component.ts", "src/app/register/register.component.html", "src/app/auth.guard.ts", "src/app/app.routes.ts", "src/app/app.config.ts", "src/app/app.component.ts", "src/app/app.component.html", "src/main.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ApiService, LoginRequest } from './api.service';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(this.hasValidToken());\r\n  isLoggedIn$: Observable<boolean> = this.isLoggedInSubject.asObservable();\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  login(credentials: LoginRequest): Observable<boolean> {\r\n    return this.apiService.login(credentials).pipe(\r\n      tap(response => {\r\n        // Store token if present\r\n        if (response.token) {\r\n          localStorage.setItem('authToken', response.token);\r\n        }\r\n        // Store user data if present\r\n        if (response.user) {\r\n          localStorage.setItem('userData', JSON.stringify(response.user));\r\n        }\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n        this.isLoggedInSubject.next(true);\r\n      }),\r\n      map(() => true)\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userData');\r\n    localStorage.removeItem('isLoggedIn');\r\n    this.isLoggedInSubject.next(false);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.hasValidToken() || this.isLoggedInSubject.value;\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n\r\n  getUserData(): any {\r\n    const userData = localStorage.getItem('userData');\r\n    return userData ? JSON.parse(userData) : null;\r\n  }\r\n\r\n  private hasValidToken(): boolean {\r\n    const token = localStorage.getItem('authToken');\r\n    const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n    return !!(token && isLoggedIn);\r\n  }\r\n}", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  isFontAwesomeEnabled = true;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get username() { return this.loginForm.get('username'); }\r\n  get password() { return this.loginForm.get('password'); }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      \r\n      const credentials = {\r\n        username: this.loginForm.value.username,\r\n        password: this.loginForm.value.password\r\n      };\r\n\r\n      this.authService.login(credentials).subscribe({\r\n        next: (success) => {\r\n          if (success) {\r\n            console.log('Login successful');\r\n            this.router.navigate(['/dashboard']);\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Login failed:', error);\r\n          this.errorMessage = error;\r\n          this.isLoading = false;\r\n        },\r\n        complete: () => {\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}", "<div class=\"container d-flex justify-content-center align-items-center vh-100\">\r\n  <div class=\"card p-4 shadow\" style=\"max-width: 400px; width: 100%;\">\r\n    <h3 class=\"card-title text-center mb-4\">\r\n      <i class=\"fas fa-lock me-2\" *ngIf=\"isFontAwesomeEnabled\"></i> Login\r\n    </h3>\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"username\" class=\"form-label\">Username</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-user\"></i>\r\n          </span>\r\n          <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\"\r\n            [class.is-invalid]=\"username?.invalid && (username?.dirty || username?.touched)\" placeholder=\"Enter your username\">\r\n          <div *ngIf=\"username?.invalid && (username?.dirty || username?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"username?.errors?.['required']\">Username is required.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-key\"></i>\r\n          </span>\r\n          <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\"\r\n            [class.is-invalid]=\"password?.invalid && (password?.dirty || password?.touched)\"\r\n            placeholder=\"Enter your password\">\r\n          <div *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"password?.errors?.['required']\">Password is required.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn brand-green-btn w-100\" [disabled]=\"loginForm.invalid || isLoading\">\r\n        {{ isLoading ? 'Logging in...' : 'Login' }}\r\n      </button>\r\n    </form>\r\n    <p class=\"text-center mt-3\" style=\"text-decoration: none;\">\r\n      Don't have an account? <a routerLink=\"/register\" style=\"text-decoration: none; color: inherit;\">Register</a>\r\n    </p>\r\n  </div>\r\n</div>", "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink, Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  isFontAwesomeEnabled = true;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private authService: AuthService, \r\n    private apiService: ApiService,\r\n    private router: Router\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      role: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    return form.get('password')?.value === form.get('confirmPassword')?.value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  get name() { return this.registerForm.get('name'); }\r\n  get username() { return this.registerForm.get('username'); }\r\n  get email() { return this.registerForm.get('email'); }\r\n  get role() { return this.registerForm.get('role'); }\r\n  get password() { return this.registerForm.get('password'); }\r\n  get confirmPassword() { return this.registerForm.get('confirmPassword'); }\r\n\r\n  onSubmit(): void {\r\n    if (this.registerForm.valid) {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n\r\n      const registerData = {\r\n        name: this.registerForm.value.name,\r\n        username: this.registerForm.value.username,\r\n        email: this.registerForm.value.email,\r\n        role: this.registerForm.value.role,\r\n        password: this.registerForm.value.password,\r\n      };\r\n\r\n      this.apiService.register(registerData).subscribe({\r\n        next: (response) => {\r\n          console.log('Registration successful:', response);\r\n          // Auto-login after successful registration\r\n          const loginCredentials = {\r\n            username: this.registerForm.value.username,\r\n            password: this.registerForm.value.password\r\n          };\r\n          \r\n          this.authService.login(loginCredentials).subscribe({\r\n            next: (loginSuccess) => {\r\n              if (loginSuccess) {\r\n                this.router.navigate(['/dashboard']);\r\n              }\r\n            },\r\n            error: (loginError) => {\r\n              console.error('Auto-login failed:', loginError);\r\n              this.router.navigate(['/login']);\r\n            }\r\n          });\r\n        },\r\n        error: (error) => {\r\n          console.error('Registration failed:', error);\r\n          this.errorMessage = error;\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}", "<div class=\"container d-flex justify-content-center align-items-center vh-100\">\r\n  <div class=\"card p-4 shadow\" style=\"max-width: 400px; width: 100%;\">\r\n    <h3 class=\"card-title text-center mb-4\">\r\n      <i class=\"fas fa-user-plus me-2\" *ngIf=\"isFontAwesomeEnabled\"></i> Register\r\n    </h3>\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"name\" class=\"form-label\">Full Name</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-id-card\"></i>\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            class=\"form-control\"\r\n            formControlName=\"name\"\r\n            [class.is-invalid]=\"name?.invalid && (name?.dirty || name?.touched)\"\r\n            placeholder=\"Enter your full name\"\r\n          >\r\n          <div *ngIf=\"name?.invalid && (name?.dirty || name?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"name?.errors?.['required']\">Full name is required.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"username\" class=\"form-label\">Username</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-user\"></i>\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            class=\"form-control\"\r\n            formControlName=\"username\"\r\n            [class.is-invalid]=\"username?.invalid && (username?.dirty || username?.touched)\"\r\n            placeholder=\"Enter your username\"\r\n          >\r\n          <div *ngIf=\"username?.invalid && (username?.dirty || username?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"username?.errors?.['required']\">Username is required.</div>\r\n            <div *ngIf=\"username?.errors?.['minlength']\">Username must be at least 3 characters.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"email\" class=\"form-label\">Email address</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-envelope\"></i>\r\n          </span>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"email\"\r\n            [class.is-invalid]=\"email?.invalid && (email?.dirty || email?.touched)\"\r\n            placeholder=\"Enter your email\"\r\n          >\r\n          <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"email?.errors?.['required']\">Email is required.</div>\r\n            <div *ngIf=\"email?.errors?.['email']\">Please enter a valid email.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"role\" class=\"form-label\">Role</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-briefcase\"></i>\r\n          </span>\r\n          <select\r\n            id=\"role\"\r\n            class=\"form-select\"\r\n            formControlName=\"role\"\r\n            [class.is-invalid]=\"role?.invalid && (role?.dirty || role?.touched)\"\r\n          >\r\n            <option value=\"\">Select your role</option>\r\n            <option value=\"USER\">User</option>\r\n            <option value=\"ADMIN\">Admin</option>\r\n            <option value=\"HR\">HR</option>\r\n          </select>\r\n          <div *ngIf=\"role?.invalid && (role?.dirty || role?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"role?.errors?.['required']\">Role is required.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-key\"></i>\r\n          </span>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            class=\"form-control\"\r\n            formControlName=\"password\"\r\n            [class.is-invalid]=\"password?.invalid && (password?.dirty || password?.touched)\"\r\n            placeholder=\"Enter your password\"\r\n          >\r\n          <div *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"password?.errors?.['required']\">Password is required.</div>\r\n            <div *ngIf=\"password?.errors?.['minlength']\">Password must be at least 6 characters.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\" *ngIf=\"isFontAwesomeEnabled\">\r\n            <i class=\"fas fa-key\"></i>\r\n          </span>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            class=\"form-control\"\r\n            formControlName=\"confirmPassword\"\r\n            [class.is-invalid]=\"(confirmPassword?.invalid || registerForm.errors?.['mismatch']) && (confirmPassword?.dirty || confirmPassword?.touched)\"\r\n            placeholder=\"Confirm your password\"\r\n          >\r\n          <div *ngIf=\"(confirmPassword?.invalid || registerForm.errors?.['mismatch']) && (confirmPassword?.dirty || confirmPassword?.touched)\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"confirmPassword?.errors?.['required']\">Confirm Password is required.</div>\r\n            <div *ngIf=\"registerForm.errors?.['mismatch']\">Passwords do not match.</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn brand-green-btn w-100\" [disabled]=\"registerForm.invalid || isLoading\">\r\n        {{ isLoading ? 'Registering...' : 'Register' }}\r\n      </button>\r\n    </form>\r\n    <p class=\"text-center mt-3\">\r\n      Already have an account? <a routerLink=\"/login\" style=\"text-decoration: none; color: inherit;\">Login</a>\r\n    </p>\r\n  </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}", "import { Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { CreateJobComponent } from './jobs/create-job/create-job.component';\r\nimport { EditJobComponent } from './jobs/edit-job/edit-job.component';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nexport const routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', loadComponent: () => import('./dashboard/dashboard.component').then(m => m.DashboardComponent), canActivate: [AuthGuard] },\r\n  { path: 'jobs', loadComponent: () => import('./jobs/jobs.component').then(m => m.JobsComponent), canActivate: [AuthGuard] },\r\n  { path: 'candidates', loadComponent: () => import('./candidates/candidates.component').then(m => m.CandidatesComponent), canActivate: [AuthGuard] },\r\n  { path: 'jobs/create-job', loadComponent: () => import('./jobs/create-job/create-job.component').then(m => m.CreateJobComponent), canActivate: [AuthGuard] },\r\n  { path: 'jobs/edit-job/:id', loadComponent: () => import('./jobs/edit-job/edit-job.component').then(m => m.EditJobComponent), canActivate: [AuthGuard] },\r\n  { path: 'candidates/create-candidate', loadComponent: () => import('./candidates/create-candidate/create-candidate.component').then(m => m.CreateCandidateComponent), canActivate: [AuthGuard] },\r\n  { path: 'offers', loadComponent: () => import('./offers/offers.component').then(m => m.OffersComponent), canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'candidates/edit-candidate/:id', loadComponent: () => import('./candidates/edit-candidate/edit-candidate.component').then(m => m.EditCandidateComponent), canActivate: [AuthGuard] },\r\n  { path: 'jobs/view-job/:id', loadComponent: () => import('./jobs/view-job/view-job.component').then(m => m.ViewJobComponent), canActivate: [AuthGuard] },\r\n  { path: 'candidates/view-candidate/:id', loadComponent: () => import('./candidates/view-candidate/view-candidate.component').then(m => m.ViewCandidateComponent), canActivate: [AuthGuard] },\r\n  { path: 'candidates/view-candidate/:id/review/:stepId', loadComponent: () => import('./candidates/review-form/review-form.component').then(m => m.ReviewFormComponent), canActivate: [AuthGuard] },\r\n  { path: 'assessments', loadComponent: () => import('./assessments/assessments.component').then(m => m.AssessmentsComponent), canActivate: [AuthGuard] },\r\n  { path: 'assessments/create-assessment', loadComponent: () => import('./assessments/create-assessment/create-assessment.component').then(m => m.CreateAssessmentComponent), canActivate: [AuthGuard] },\r\n];", "import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient } from '@angular/common/http';\r\n\r\nimport { routes } from './app.routes';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }), \r\n    provideRouter(routes),\r\n    provideHttpClient()\r\n  ]\r\n};", "import { Component } from '@angular/core';\r\nimport { RouterOutlet, RouterLink, RouterLinkActive, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, RouterLink, RouterLinkActive, CommonModule],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'instaShortlist';\r\n\r\n  constructor(public authService: AuthService, public router: Router) {}\r\n\r\n  isLoginOrRegisterPage(): boolean {\r\n    return this.router.url === '/login' || this.router.url === '/register';\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}", "<div class=\"d-flex\" style=\"background-color: rgb(243, 243, 243); min-height: 100vh;\">\r\n  <!-- Floating Sidebar -->\r\n  <nav class=\"sidebar d-flex flex-column align-items-start p-3 shadow\"\r\n       style=\"width: 280px; min-width: 200px; margin: 32px; border-radius: 18px; height: calc(100vh - 64px);\">\r\n    <a class=\"navbar-brand d-flex align-items-center mb-4 text-decoration-none\" href=\"/\">\r\n      <img src=\"/assets/logo.png\" alt=\"Logo\" width=\"36\" height=\"36\" class=\"me-2\" />\r\n      <span class=\"fs-4\" style=\"color: #222;\">InstaShortlist</span>\r\n    </a>\r\n    <!-- Navigation links only visible if logged in -->\r\n    <ng-container *ngIf=\"authService.isLoggedIn()\">\r\n      <ul class=\"nav nav-pills flex-column w-100 mb-auto\">\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/dashboard\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fas fa-tachometer-alt\"></i></span>\r\n            <span class=\"sidebar-link-text\">Dashboard</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/inbox\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fas fa-inbox\"></i></span>\r\n            <span class=\"sidebar-link-text\">Inbox</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/jobs\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fa fa-briefcase\"></i></span>\r\n            <span class=\"sidebar-link-text\">Jobs</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/assessments\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fas fa-clipboard-list\"></i></span>\r\n            <span class=\"sidebar-link-text\">Assessments</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/candidates\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fa fa-user-friends\"></i></span>\r\n            <span class=\"sidebar-link-text\">Candidates</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item w-100 mb-2\">\r\n          <a class=\"nav-link d-flex align-items-center gap-2\" routerLink=\"/offers\" routerLinkActive=\"active\">\r\n            <span class=\"sidebar-icon\"><i class=\"fas fa-award\"></i></span>\r\n            <span class=\"sidebar-link-text\">Offers</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </ng-container>\r\n    <div class=\"mt-auto w-100\">\r\n      <ng-container *ngIf=\"authService.isLoggedIn(); else notLoggedIn\">\r\n        <ul class=\"nav nav-pills flex-column w-100 mb-2\">\r\n          <li class=\"nav-item w-100 mb-2\">\r\n            <a class=\"nav-link d-flex align-items-center gap-4\" (click)=\"logout()\" style=\"cursor:pointer;\">\r\n              <i class=\"fas fa-sign-out-alt me-2\"></i>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </ng-container>\r\n      <ng-template #notLoggedIn>\r\n        <ul class=\"nav nav-pills flex-column w-100 mb-2\">\r\n          <li class=\"nav-item w-100 mb-2\">\r\n            <a class=\"nav-link d-flex align-items-center gap-4\" routerLink=\"/login\" routerLinkActive=\"active\">\r\n              <i class=\"fas fa-sign-in-alt me-2\"></i>\r\n              Login\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item w-100 mb-2\">\r\n            <a class=\"nav-link d-flex align-items-center gap-4\" routerLink=\"/register\" routerLinkActive=\"active\">\r\n              <i class=\"fas fa-user-plus me-2\"></i>\r\n              Register\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </ng-template>\r\n    </div>\r\n  </nav>\r\n  <!-- Main content -->\r\n  <div class=\"flex-grow-1 main-content-wrapper\" style=\"padding: 40px 40px 40px 40px;\">\r\n    <div class=\"main-content rounded-4\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\nbody {\r\n  background-color: rgb(243, 243, 243) !important;\r\n}\r\n.sidebar {\r\n  min-height: 90vh;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 1040;\r\n  background-color: rgb(253, 253, 253) !important;\r\n  box-shadow: 0 8px 32px rgba(60,60,60,0.08), 0 1.5px 4px rgba(60,60,60,0.06);\r\n}\r\n.sidebar .nav-link,\r\n.sidebar .navbar-brand,\r\n.sidebar .nav-link svg {\r\n  color: #3d3d3d !important;\r\n  fill: #3d3d3d !important;\r\n}\r\n.sidebar .nav-link.active, .sidebar .nav-link.router-link-active {\r\n  background-color: rgb(202, 210, 255) !important;\r\n  color: black!important;\r\n}\r\n.main-content-wrapper {\r\n  background: transparent;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  margin-left: 280px;\r\n}\r\n\r\n.main-content {\r\n  background: transparent !important;\r\n  border-radius: 18px;\r\n  min-height: 100%;\r\n  width: 100%;\r\n}\r\n.sidebar-icon {\r\n  font-size: 1.25rem;\r\n  min-width: 28px;\r\n  text-align: center;\r\n  color: #3d3d3d !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.sidebar-link-text {\r\n  font-size: 1rem;\r\n  color: #3d3d3d !important;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.sidebar .nav-link {\r\n  padding-top: 0.55rem;\r\n  padding-bottom: 0.55rem;\r\n}\r\n</style>", "import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],
  "mappings": "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",
  "names": ["AuthService", "apiService", "isLoggedInSubject", "BehaviorSubject", "hasValidToken", "isLoggedIn$", "asObservable", "constructor", "login", "credentials", "pipe", "tap", "response", "token", "localStorage", "setItem", "user", "JSON", "stringify", "next", "map", "logout", "removeItem", "isLoggedIn", "value", "getToken", "getItem", "getUserData", "userData", "parse", "\u0275\u0275inject", "ApiService", "factory", "\u0275fac", "providedIn", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "errorMessage", "\u0275\u0275template", "LoginComponent_div_13_div_1_Template", "\u0275\u0275property", "username", "errors", "LoginComponent_div_20_div_1_Template", "password", "LoginComponent", "fb", "authService", "router", "loginForm", "isFontAwesomeEnabled", "isLoading", "constructor", "group", "Validators", "required", "ngOnInit", "get", "onSubmit", "valid", "credentials", "value", "login", "subscribe", "next", "success", "console", "log", "navigate", "error", "complete", "\u0275\u0275directiveInject", "FormBuilder", "AuthService", "Router", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "LoginComponent_i_3_Template", "LoginComponent_div_5_Template", "\u0275\u0275listener", "LoginComponent_span_11_Template", "LoginComponent_div_13_Template", "LoginComponent_span_18_Template", "LoginComponent_div_20_Template", "\u0275\u0275classProp", "invalid", "dirty", "touched", "\u0275\u0275textInterpolate1", "CommonModule", "NgIf", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "RouterLink", "styles", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "errorMessage", "\u0275\u0275template", "RegisterComponent_div_13_div_1_Template", "\u0275\u0275property", "name", "errors", "RegisterComponent_div_20_div_1_Template", "RegisterComponent_div_20_div_2_Template", "username", "RegisterComponent_div_27_div_1_Template", "RegisterComponent_div_27_div_2_Template", "email", "RegisterComponent_div_42_div_1_Template", "role", "RegisterComponent_div_49_div_1_Template", "RegisterComponent_div_49_div_2_Template", "password", "RegisterComponent_div_56_div_1_Template", "RegisterComponent_div_56_div_2_Template", "confirmPassword", "registerForm", "RegisterComponent", "fb", "authService", "apiService", "router", "isFontAwesomeEnabled", "isLoading", "constructor", "group", "Validators", "required", "minLength", "validators", "passwordMatchValidator", "ngOnInit", "form", "get", "value", "mismatch", "onSubmit", "valid", "registerData", "register", "subscribe", "next", "response", "console", "log", "loginCredentials", "login", "loginSuccess", "navigate", "error", "loginError", "\u0275\u0275directiveInject", "FormBuilder", "AuthService", "ApiService", "Router", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "RegisterComponent_i_3_Template", "RegisterComponent_div_5_Template", "\u0275\u0275listener", "RegisterComponent_span_11_Template", "RegisterComponent_div_13_Template", "RegisterComponent_span_18_Template", "RegisterComponent_div_20_Template", "RegisterComponent_span_25_Template", "RegisterComponent_div_27_Template", "RegisterComponent_span_32_Template", "RegisterComponent_div_42_Template", "RegisterComponent_span_47_Template", "RegisterComponent_div_49_Template", "RegisterComponent_span_54_Template", "RegisterComponent_div_56_Template", "\u0275\u0275classProp", "invalid", "dirty", "touched", "\u0275\u0275textInterpolate1", "CommonModule", "NgIf", "ReactiveFormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "RouterLink", "styles", "AuthGuard", "authService", "router", "constructor", "canActivate", "isLoggedIn", "navigate", "\u0275\u0275inject", "AuthService", "Router", "factory", "\u0275fac", "providedIn", "routes", "path", "component", "LoginComponent", "RegisterComponent", "loadComponent", "then", "m", "DashboardComponent", "canActivate", "AuthGuard", "JobsComponent", "CandidatesComponent", "CreateJobComponent", "EditJobComponent", "CreateCandidateComponent", "OffersComponent", "redirectTo", "pathMatch", "EditCandidateComponent", "ViewJobComponent", "ViewCandidateComponent", "ReviewFormComponent", "AssessmentsComponent", "CreateAssessmentComponent", "appConfig", "providers", "provideZoneChangeDetection", "eventCoalescing", "provideRouter", "routes", "provideHttpClient", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "logout", "AppComponent", "authService", "router", "title", "constructor", "isLoginOrRegisterPage", "url", "navigate", "\u0275\u0275directiveInject", "AuthService", "Router", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "AppComponent_ng_container_6_Template", "AppComponent_ng_container_8_Template", "AppComponent_ng_template_9_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275advance", "\u0275\u0275property", "isLoggedIn", "notLoggedIn_r3", "RouterOutlet", "RouterLink", "RouterLinkActive", "CommonModule", "NgIf", "styles", "bootstrapApplication", "AppComponent", "appConfig", "catch", "err", "console", "error"]
}
