{
  "version": 3,
  "sources": ["src/app/jobs/edit-job/edit-job.component.ts", "src/app/jobs/edit-job/edit-job.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterLink, ActivatedRoute } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ApiService, CreateJobRequest, Job } from '../../api.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-job',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink, FormsModule],\r\n  templateUrl: './edit-job.component.html',\r\n  styleUrl: './edit-job.component.css'\r\n})\r\nexport class EditJobComponent implements OnInit {\r\n  job: Job = {\r\n    id: 0,\r\n    title: '',\r\n    role: '',\r\n    location: '',\r\n    description: '',\r\n    isActive: true,\r\n    salaryMin: 0,\r\n    salaryMax: 0,\r\n    type: 'Full-time',\r\n    level: 'Entry-level',\r\n  };\r\n\r\n  loading = false;\r\n  error: string | null = null;\r\n  success = false;\r\n  loadingJob = false;\r\n  jobId: number = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Get job ID from route parameters\r\n    this.route.params.subscribe(params => {\r\n      this.jobId = +params['id']; // Convert to number\r\n      if (this.jobId) {\r\n        this.loadJobData();\r\n      } else {\r\n        this.error = 'Invalid job ID';\r\n      }\r\n    });\r\n  }\r\n\r\n  loadJobData() {\r\n    this.loadingJob = true;\r\n    this.error = null;\r\n\r\n    this.apiService.getJobById(this.jobId).subscribe({\r\n      next: (job) => {\r\n        console.log('Job loaded for editing:', job);\r\n        this.job = job;\r\n        this.loadingJob = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading job:', error);\r\n        this.error = `Failed to load job: ${error}`;\r\n        this.loadingJob = false;\r\n\r\n        // Try to load from fallback data\r\n        this.loadFallbackJob();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadFallbackJob() {\r\n    // Fallback data for testing\r\n    const fallbackJobs: Job[] = [\r\n      {\r\n        id: 1,\r\n        title: 'Software Engineer',\r\n        role: 'Tech Corp',\r\n        location: 'Bangalore, India',\r\n        description: 'Develop and maintain web applications using Angular and Spring Boot.',\r\n        isActive: true,\r\n        salaryMin: 12000,\r\n        salaryMax: 30000,\r\n        type: 'Full-time',\r\n        level: 'Mid-level',\r\n\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Frontend Developer',\r\n        role: 'Web Solutions',\r\n        location: 'Mumbai, India',\r\n        description: 'Create responsive user interfaces using modern web technologies.',\r\n        isActive: true,\r\n\r\n        salaryMin: 8000,\r\n        salaryMax: 25000,\r\n        type: 'Full-time',\r\n        level: 'Entry-level',\r\n\r\n      }\r\n    ];\r\n\r\n    const fallbackJob = fallbackJobs.find(job => job.id === this.jobId);\r\n    if (fallbackJob) {\r\n      this.job = fallbackJob;\r\n      this.error = 'Loaded from fallback data - API unavailable';\r\n    } else {\r\n      this.error = 'Job not found';\r\n    }\r\n  }\r\n\r\n  onSubmit(form: any) {\r\n    if (form.valid && this.jobId) {\r\n      this.loading = true;\r\n      this.error = null;\r\n      this.success = false;\r\n\r\n      const jobData: CreateJobRequest = {\r\n        title: this.job.title,\r\n        role: this.job.role,\r\n        location: this.job.location,\r\n        description: this.job.description,\r\n        salaryMin: Number(this.job.salaryMin),\r\n        salaryMax: Number(this.job.salaryMax),\r\n        type: this.job.type,\r\n        level: this.job.level,\r\n        isActive: this.job.isActive,\r\n      };\r\n      this.apiService.updateJob(this.jobId, jobData).subscribe({\r\n        next: (updatedJob) => {\r\n          console.log('Job updated successfully:', updatedJob);\r\n          this.loading = false;\r\n          this.success = true;\r\n\r\n          // Navigate to jobs page after short delay\r\n          setTimeout(() => {\r\n            this.router.navigate(['/jobs']);\r\n          }, 1500);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error updating job:', error);\r\n          this.error = `Failed to update job: ${error}`;\r\n          this.loading = false;\r\n\r\n          // Fallback to localStorage if API fails (for demo purposes)\r\n          this.updateLocalStorage();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateLocalStorage() {\r\n    try {\r\n      // This is a fallback for demo purposes\r\n      console.log('Updating job in localStorage as fallback');\r\n      this.success = true;\r\n      setTimeout(() => {\r\n        this.router.navigate(['/jobs']);\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Error updating localStorage:', err);\r\n      this.error = 'Failed to update job. Please try again.';\r\n    }\r\n  }\r\n\r\n  clearError() {\r\n    this.error = null;\r\n  }\r\n\r\n  // Toggle job status\r\n  toggleJobStatus() {\r\n    this.job.isActive = !this.job.isActive;\r\n  }\r\n}", "<div class=\"create-job-bg d-flex align-items-center justify-content-center min-vh-90 w-100\">\r\n  <div class=\"create-job-card p-5 shadow-lg w-100\">\r\n    <div class=\"text-center mb-4\">\r\n      <div class=\"brand-icon mb-2\">\r\n        <i class=\"fas fa-edit\"></i>\r\n      </div>\r\n      <h2 class=\"brand-heading mb-1\">Edit Job</h2>\r\n      <div class=\"brand-subheading mb-3\">Update the job details below</div>\r\n    </div>\r\n\r\n    <!-- Loading Job Data -->\r\n    <div *ngIf=\"loadingJob\" class=\"alert alert-info\">\r\n      <i class=\"fas fa-spinner fa-spin me-2\"></i>Loading job data...\r\n    </div>\r\n\r\n    <!-- Updating Job -->\r\n    <div *ngIf=\"loading\" class=\"alert alert-info\">\r\n      <i class=\"fas fa-spinner fa-spin me-2\"></i>Updating job...\r\n    </div>\r\n\r\n    <!-- Success Message -->\r\n    <div *ngIf=\"success\" class=\"alert alert-success\">\r\n      <i class=\"fas fa-check-circle me-2\"></i>Job updated successfully! Redirecting...\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>{{ error }}\r\n      <button type=\"button\" class=\"btn-close float-end\" (click)=\"clearError()\"></button>\r\n    </div>\r\n    \r\n    <!-- Edit Form -->\r\n    <form #editJobForm=\"ngForm\" (ngSubmit)=\"onSubmit(editJobForm)\" *ngIf=\"!loadingJob\">\r\n      <div class=\"row g-4\">\r\n        <div class=\"col-md-6\">\r\n          <label for=\"title\" class=\"form-label\">Job Title</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" [(ngModel)]=\"job.title\" placeholder=\"@eg-Software Developer\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <label for=\"role\" class=\"form-label\">Job Role</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"role\" name=\"role\" [(ngModel)]=\"job.role\" placeholder=\"@eg-Developer\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <label for=\"location\" class=\"form-label\">Location</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"location\" name=\"location\" [(ngModel)]=\"job.location\" placeholder=\"@eg-Remote\" required>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <label for=\"type\" class=\"form-label\">Employment Type</label>\r\n          <select class=\"form-select\" id=\"type\" name=\"type\" [(ngModel)]=\"job.type\">\r\n            <option>Full-time</option>\r\n            <option>Part-time</option>\r\n            <option>Contract</option>\r\n            <option>Internship</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <label for=\"level\" class=\"form-label\">Seniority Level</label>\r\n          <select class=\"form-select\" id=\"level\" name=\"level\" [(ngModel)]=\"job.level\">\r\n            <option>Entry-level</option>\r\n            <option>Mid-level</option>\r\n            <option>Senior-level</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <label for=\"salaryMin\" class=\"form-label\">Min Salary</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"salaryMin\" name=\"salaryMin\" [(ngModel)]=\"job.salaryMin\" placeholder=\"@eg-1000\" required>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <label for=\"salaryMax\" class=\"form-label\">Max Salary</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"salaryMax\" name=\"salaryMax\" [(ngModel)]=\"job.salaryMax\" placeholder=\"@eg-10000\" required>\r\n        </div>\r\n        \r\n        <!-- Job Status Toggle -->\r\n        <div class=\"col-md-6\">\r\n          <label class=\"form-label\">Job Status</label>\r\n          <div class=\"form-check form-switch\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"isActive\" name=\"isActive\" [(ngModel)]=\"job.isActive\">\r\n            <label class=\"form-check-label\" for=\"isActive\">\r\n              <span class=\"badge\" [ngClass]=\"job.isActive ? 'brand-green-bg' : 'brand-yellow-bg'\">\r\n                {{ job.isActive ? 'Active' : 'Inactive' }}\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Current Applicants (Read-only) -->\r\n\r\n        <div class=\"col-12\">\r\n          <label for=\"description\" class=\"form-label\">Job Description</label>\r\n          <textarea class=\"form-control\" id=\"description\" name=\"description\" rows=\"6\" [(ngModel)]=\"job.description\" placeholder=\"@eg-This role demands...\" required></textarea>\r\n        </div>\r\n        \r\n        <div class=\"col-12 d-flex justify-content-between align-items-center mt-4\">\r\n          <a routerLink=\"/jobs\" class=\"btn brand-outline-btn\">Cancel</a>\r\n          <div class=\"d-flex gap-2\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"toggleJobStatus()\">\r\n              <i class=\"fas fa-toggle-on me-1\" *ngIf=\"job.isActive\"></i>\r\n              <i class=\"fas fa-toggle-off me-1\" *ngIf=\"!job.isActive\"></i>\r\n              {{ job.isActive ? 'Deactivate' : 'Activate' }} Job\r\n            </button>\r\n            <button type=\"submit\" class=\"btn brand-green-btn px-4\" [disabled]=\"!editJobForm.valid || loading\">\r\n              <i class=\"fas fa-save me-1\"></i>Update Job\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clearError", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "error", "_r3", "editJobForm_r4", "\u0275\u0275reference", "onSubmit", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "job", "title", "role", "location", "type", "level", "salaryMin", "salaryMax", "isActive", "description", "toggleJobStatus", "\u0275\u0275template", "EditJobComponent_form_13_i_62_Template", "EditJobComponent_form_13_i_63_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "valid", "loading", "EditJobComponent", "router", "route", "apiService", "id", "success", "loadingJob", "jobId", "constructor", "ngOnInit", "params", "subscribe", "loadJobData", "getJobById", "next", "console", "log", "loadFallbackJob", "fallbackJob", "find", "form", "jobData", "Number", "updateJob", "updatedJob", "setTimeout", "navigate", "updateLocalStorage", "err", "\u0275\u0275directiveInject", "Router", "ActivatedRoute", "ApiService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "EditJobComponent_div_9_Template", "EditJobComponent_div_10_Template", "EditJobComponent_div_11_Template", "EditJobComponent_div_12_Template", "EditJobComponent_form_13_Template", "CommonModule", "NgClass", "NgIf", "RouterLink", "FormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "NumberValueAccessor", "CheckboxControlValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "NgModel", "NgForm", "styles"]
}
