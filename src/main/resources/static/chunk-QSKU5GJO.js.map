{
  "version": 3,
  "sources": ["src/app/candidates/review-form/review-form.component.ts", "src/app/candidates/review-form/review-form.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ApiService, CreateReviewRequest, CandidateStep, Candidate } from '../../api.service';\r\n\r\n@Component({\r\n  selector: 'app-review-form',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterModule],\r\n  templateUrl: './review-form.component.html',\r\n  styleUrls: ['./review-form.component.css']\r\n})\r\nexport class ReviewFormComponent implements OnInit {\r\n  candidateId: number = 0;\r\n  stepId: number = 0;\r\n  candidate: Candidate | null = null;\r\n  step: CandidateStep | null = null;\r\n  loading = false;\r\n  error: string | null = null;\r\n  success: string | null = null;\r\n\r\n  reviewForm: CreateReviewRequest = {\r\n    reviewer: '',\r\n    feedback: '',\r\n    score: 0\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.candidateId = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.stepId = Number(this.route.snapshot.paramMap.get('stepId'));\r\n\r\n    // Get current user email for reviewer field\r\n    const currentUser = localStorage.getItem('currentUser');\r\n    if (currentUser) {\r\n      const user = JSON.parse(currentUser);\r\n      this.reviewForm.reviewer = user.email || 'interviewer@example.com';\r\n    } else {\r\n      this.reviewForm.reviewer = 'interviewer@example.com';\r\n    }\r\n\r\n    this.loadCandidateAndStep();\r\n  }\r\n\r\n  private loadCandidateAndStep() {\r\n    this.loading = true;\r\n\r\n    // Load candidate details\r\n    this.apiService.getCandidateById(this.candidateId).subscribe({\r\n      next: (candidate) => {\r\n        this.candidate = candidate;\r\n        this.loadStep();\r\n      },\r\n      error: (err) => {\r\n        // Try fallback data\r\n        const fallback = ApiService.getFallbackCandidates().find(c => c.id === this.candidateId);\r\n        if (fallback) {\r\n          this.candidate = fallback;\r\n          this.loadStep();\r\n        } else {\r\n          this.error = 'Candidate not found';\r\n          this.loading = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadStep() {\r\n    this.apiService.getCandidateSteps(this.candidateId).subscribe({\r\n      next: (steps) => {\r\n        this.step = steps.find(s => s.id === this.stepId) || null;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        // Try fallback data\r\n        const fallbackSteps = ApiService.getFallbackCandidateSteps(this.candidateId);\r\n        this.step = fallbackSteps.find(s => s.id === this.stepId) || null;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.isFormValid()) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.error = null;\r\n    this.success = null;\r\n\r\n    this.apiService.createReview(this.stepId, this.reviewForm).subscribe({\r\n      next: (review) => {\r\n        this.success = 'Review submitted successfully!';\r\n        this.loading = false;\r\n\r\n        // Navigate back to candidate view after 2 seconds\r\n        setTimeout(() => {\r\n          this.router.navigate(['/candidates/view-candidate', this.candidateId]);\r\n        }, 2000);\r\n      },\r\n      error: (err) => {\r\n        this.error = 'Failed to submit review. Please try again.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private isFormValid(): boolean {\r\n    if (!this.reviewForm.reviewer.trim()) {\r\n      this.error = 'Reviewer email is required';\r\n      return false;\r\n    }\r\n\r\n    if (!this.reviewForm.feedback.trim()) {\r\n      this.error = 'Feedback is required';\r\n      return false;\r\n    }\r\n\r\n    if (this.reviewForm.score < 0 || this.reviewForm.score > 100) {\r\n      this.error = 'Score must be between 0 and 100';\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/candidates/view-candidate', this.candidateId]);\r\n  }\r\n}", "<div class=\"review-form-bg d-flex align-items-center justify-content-center min-vh-90 w-100\">\r\n    <!-- Loading State -->\r\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center align-items-center\" style=\"min-height: 400px;\">\r\n        <div class=\"text-center\">\r\n            <div class=\"spinner-border text-primary mb-3\" style=\"width: 3rem; height: 3rem;\" role=\"status\"></div>\r\n            <p class=\"text-muted fs-5\">Loading...</p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Review Form -->\r\n    <div *ngIf=\"!loading\" class=\"review-form-card p-5 shadow-lg w-100\">\r\n        <div class=\"text-center mb-4\">\r\n            <div class=\"brand-icon mb-2\">\r\n                <i class=\"fas fa-star\"></i>\r\n            </div>\r\n            <h2 class=\"brand-heading mb-1\">Submit Review</h2>\r\n            <div class=\"brand-subheading mb-3\" *ngIf=\"candidate && step\">\r\n                {{ candidate.name }} - {{ step.stepName }}\r\n            </div>\r\n            <div class=\"brand-subheading mb-3\" *ngIf=\"!candidate || !step\">\r\n                Provide your detailed feedback and assessment\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Error Message -->\r\n        <div *ngIf=\"error\" class=\"alert alert-danger border-0 rounded-3 mb-4\">\r\n            <i class=\"fas fa-exclamation-circle me-2\"></i>{{ error }}\r\n        </div>\r\n\r\n        <!-- Success Message -->\r\n        <div *ngIf=\"success\" class=\"alert alert-success border-0 rounded-3 mb-4\">\r\n            <i class=\"fas fa-check-circle me-2\"></i>{{ success }}\r\n        </div>\r\n\r\n        <!-- Review Form -->\r\n        <form (ngSubmit)=\"onSubmit()\" #reviewFormRef=\"ngForm\">\r\n            <div class=\"row g-4\">\r\n                <!-- Reviewer Email -->\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"reviewer\" class=\"form-label\">\r\n                        <i class=\"fas fa-user me-2 text-primary\"></i>Reviewer Email\r\n                    </label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"reviewer\" name=\"reviewer\"\r\n                        [(ngModel)]=\"reviewForm.reviewer\" required email\r\n                        placeholder=\"Enter your email address\" #reviewerInput=\"ngModel\">\r\n                    <div *ngIf=\"reviewerInput.invalid && reviewerInput.touched\"\r\n                        class=\"text-danger small mt-1\">\r\n                        <span *ngIf=\"reviewerInput.errors?.['required']\">Reviewer email is required</span>\r\n                        <span *ngIf=\"reviewerInput.errors?.['email']\">Please enter a valid email address</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Score -->\r\n                <div class=\"col-md-6\">\r\n                    <label for=\"score\" class=\"form-label\">\r\n                        <i class=\"fas fa-chart-line me-2 text-success\"></i>Score (0-100)\r\n                    </label>\r\n                    <div class=\"score-input-container\">\r\n                        <input type=\"number\" class=\"form-control\" id=\"score\"\r\n                            name=\"score\" [(ngModel)]=\"reviewForm.score\" required min=\"0\" max=\"100\"\r\n                            placeholder=\"Enter score\" #scoreInput=\"ngModel\">\r\n                        <div class=\"score-preview\">\r\n                            <span class=\"badge fs-6 px-3 py-2\" [ngClass]=\"{\r\n                                'bg-success': reviewForm.score >= 70,\r\n                                'bg-warning': reviewForm.score >= 40 && reviewForm.score < 70,\r\n                                'bg-danger': reviewForm.score < 40,\r\n                                'bg-secondary': reviewForm.score === 0 || !reviewForm.score\r\n                            }\">\r\n                                {{ reviewForm.score || 0 }}%\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"scoreInput.invalid && scoreInput.touched\" class=\"text-danger small mt-1\">\r\n                        <span *ngIf=\"scoreInput.errors?.['required']\">Score is required</span>\r\n                        <span *ngIf=\"scoreInput.errors?.['min']\">Score must be at least 0</span>\r\n                        <span *ngIf=\"scoreInput.errors?.['max']\">Score must be at most 100</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Feedback -->\r\n                <div class=\"col-12\">\r\n                    <label for=\"feedback\" class=\"form-label\">\r\n                        <i class=\"fas fa-comment-alt me-2 text-info\"></i>Feedback\r\n                    </label>\r\n                    <textarea class=\"form-control\" id=\"feedback\" name=\"feedback\"\r\n                        [(ngModel)]=\"reviewForm.feedback\" required rows=\"6\"\r\n                        placeholder=\"Provide detailed feedback about the candidate's performance in this step...\"\r\n                        #feedbackInput=\"ngModel\"></textarea>\r\n                    <div class=\"form-text\">\r\n                        <small class=\"text-muted\">\r\n                            <i class=\"fas fa-info-circle me-1\"></i>\r\n                            Character count: {{ reviewForm.feedback.length || 0 }}\r\n                        </small>\r\n                    </div>\r\n                    <div *ngIf=\"feedbackInput.invalid && feedbackInput.touched\"\r\n                        class=\"text-danger small mt-1\">\r\n                        <span *ngIf=\"feedbackInput.errors?.['required']\">Feedback is required</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Action Buttons -->\r\n                <div class=\"col-12 d-flex justify-content-between align-items-center mt-4\">\r\n                    <button type=\"button\" class=\"btn brand-outline-btn\" (click)=\"goBack()\">\r\n                        <i class=\"fas fa-arrow-left me-1\"></i>Back\r\n                    </button>\r\n                    <button type=\"submit\" class=\"btn brand-green-btn px-4\"\r\n                        [disabled]=\"reviewFormRef.invalid || loading\">\r\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                        <i *ngIf=\"!loading\" class=\"fas fa-paper-plane me-2\"></i>\r\n                        {{ loading ? 'Submitting...' : 'Submit Review' }}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "ctx_r1", "candidate", "name", "step", "stepName", "\u0275\u0275textInterpolate1", "error", "success", "\u0275\u0275template", "ReviewFormComponent_div_2_div_19_span_1_Template", "ReviewFormComponent_div_2_div_19_span_2_Template", "\u0275\u0275property", "reviewerInput_r3", "errors", "ReviewFormComponent_div_2_div_30_span_1_Template", "ReviewFormComponent_div_2_div_30_span_2_Template", "ReviewFormComponent_div_2_div_30_span_3_Template", "scoreInput_r4", "ReviewFormComponent_div_2_div_41_span_1_Template", "feedbackInput_r5", "ReviewFormComponent_div_2_div_6_Template", "ReviewFormComponent_div_2_div_7_Template", "ReviewFormComponent_div_2_div_8_Template", "ReviewFormComponent_div_2_div_9_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSubmit", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "reviewForm", "reviewer", "ReviewFormComponent_div_2_div_19_Template", "score", "ReviewFormComponent_div_2_div_30_Template", "feedback", "ReviewFormComponent_div_2_div_41_Template", "goBack", "ReviewFormComponent_div_2_span_47_Template", "ReviewFormComponent_div_2_i_48_Template", "\u0275\u0275twoWayProperty", "invalid", "touched", "\u0275\u0275pureFunction4", "_c0", "length", "reviewFormRef_r6", "loading", "ReviewFormComponent", "route", "router", "apiService", "candidateId", "stepId", "constructor", "ngOnInit", "Number", "snapshot", "paramMap", "get", "currentUser", "localStorage", "getItem", "user", "JSON", "parse", "email", "loadCandidateAndStep", "getCandidateById", "subscribe", "next", "loadStep", "err", "fallback", "ApiService", "getFallbackCandidates", "find", "c", "id", "getCandidateSteps", "steps", "s", "fallbackSteps", "getFallbackCandidateSteps", "isFormValid", "createReview", "review", "setTimeout", "navigate", "trim", "\u0275\u0275directiveInject", "ActivatedRoute", "Router", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ReviewFormComponent_div_1_Template", "ReviewFormComponent_div_2_Template", "CommonModule", "NgClass", "NgIf", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "EmailValidator", "MinValidator", "MaxValidator", "NgModel", "NgForm", "RouterModule", "styles"]
}
