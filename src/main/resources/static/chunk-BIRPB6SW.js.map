{
  "version": 3,
  "sources": ["src/app/candidates/candidates.component.ts", "src/app/candidates/candidates.component.html"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ApiService, Candidate } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-candidates',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink],\r\n  templateUrl: './candidates.component.html',\r\n  styleUrls: ['./candidates.component.css']\r\n})\r\nexport class CandidatesComponent implements OnInit {\r\n  tabs = ['All', 'Applied', 'In-Review', 'Interview', 'Hired', 'Rejected'];\r\n  activeTab = 'All';\r\n  candidates: Candidate[] = [];\r\n  loading = false;\r\n  error: string | null = null;\r\n  deletingCandidateId: number | null = null;\r\n  deleteSuccess: string | null = null;\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadCandidates();\r\n  }\r\n\r\n  loadCandidates() {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.apiService.getCandidates().subscribe({\r\n      next: (candidates: Candidate[]) => {\r\n        console.log('Candidates loaded successfully:', candidates);\r\n        this.candidates = candidates;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading candidates:', error);\r\n        this.error = error;\r\n        this.loading = false;\r\n        \r\n        // Fallback to static data if API fails\r\n        this.loadFallbackCandidates();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadFallbackCandidates() {\r\n    console.log('Loading fallback candidates due to API error');\r\n    this.candidates = ApiService.getFallbackCandidates();\r\n  }\r\n\r\n  get filteredCandidates() {\r\n    if (this.activeTab === 'All') {\r\n      return this.candidates;\r\n    }\r\n    return this.candidates.filter(c => c.status === this.activeTab);\r\n  }\r\n\r\n  getCandidateCountForTab(tab: string): number {\r\n    if (tab === 'All') {\r\n      return this.candidates.length;\r\n    }\r\n    return this.candidates.filter(c => c.status === tab).length;\r\n  }\r\n\r\n  setTab(tab: string) {\r\n    this.activeTab = tab;\r\n  }\r\n\r\n  refreshCandidates() {\r\n    this.loadCandidates();\r\n  }\r\n\r\n  clearError() {\r\n    this.error = null;\r\n  }\r\n\r\n  clearDeleteSuccess() {\r\n    this.deleteSuccess = null;\r\n  }\r\n\r\n  deleteCandidate(candidate: Candidate) {\r\n    if (!candidate.id) {\r\n      console.error('Cannot delete candidate without ID');\r\n      return;\r\n    }\r\n\r\n    const confirmed = confirm(`Are you sure you want to delete \"${candidate.name}\"? This action cannot be undone.`);\r\n    \r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n\r\n    this.deletingCandidateId = candidate.id;\r\n    this.error = null;\r\n    this.deleteSuccess = null;\r\n\r\n    this.apiService.deleteCandidate(candidate.id).subscribe({\r\n      next: () => {\r\n        console.log('Candidate deleted successfully');\r\n        this.deleteSuccess = `Candidate \"${candidate.name}\" has been deleted successfully.`;\r\n        this.deletingCandidateId = null;\r\n        \r\n        // Remove candidate from local array\r\n        this.candidates = this.candidates.filter(c => c.id !== candidate.id);\r\n        \r\n        // Clear success message after 3 seconds\r\n        setTimeout(() => {\r\n          this.deleteSuccess = null;\r\n        }, 3000);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting candidate:', error);\r\n        this.error = `Failed to delete candidate: ${error}`;\r\n        this.deletingCandidateId = null;\r\n        \r\n        // For fallback data, we can still remove from local array\r\n        if (this.error.includes('API') || this.error.includes('network')) {\r\n          this.candidates = this.candidates.filter(c => c.id !== candidate.id);\r\n          this.deleteSuccess = `Candidate \"${candidate.name}\" has been removed locally.`;\r\n          this.error = null;\r\n          \r\n          setTimeout(() => {\r\n            this.deleteSuccess = null;\r\n          }, 3000);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  isDeletingCandidate(candidateId: number | undefined): boolean {\r\n    return candidateId !== undefined && this.deletingCandidateId === candidateId;\r\n  }\r\n}", "<div class=\"container candidates-bg p-4\">\r\n  <!-- Top Bar -->\r\n  <div class=\"d-flex flex-wrap justify-content-between align-items-center mb-3 gap-3\">\r\n    <div class=\"d-flex flex-grow-1 gap-2\">\r\n      <input class=\"form-control\" placeholder=\"Search candidates name, role, etc\" [disabled]=\"loading\" />\r\n      <button class=\"btn btn-outline-secondary\" [disabled]=\"loading\"><i class=\"fas fa-filter\"></i> Filter</button>\r\n    </div>\r\n    <div class=\"d-flex align-items-center gap-2\">\r\n      <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"refreshCandidates()\" [disabled]=\"loading\">\r\n        <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"loading\"></i> Refresh\r\n      </button>\r\n      <input type=\"text\" class=\"form-control\" style=\"width:180px;\" placeholder=\"1-30 October, 2030\" [disabled]=\"loading\" />\r\n      <span>Sort by:</span>\r\n      <select class=\"form-select form-select-sm\" style=\"width:auto;\" [disabled]=\"loading\">\r\n        <option>Latest</option>\r\n        <option>Oldest</option>\r\n      </select>\r\n      <a [routerLink]=\"['/candidates/create-candidate']\" class=\"btn brand-green-btn ms-auto\">Add Candidate</a>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error Alert -->\r\n  <div class=\"alert alert-warning alert-dismissible fade show\" *ngIf=\"error\" role=\"alert\">\r\n    <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n    <strong>API Error:</strong> {{ error }}\r\n    <br><small class=\"text-muted\">Showing fallback data instead.</small>\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"clearError()\"></button>\r\n  </div>\r\n\r\n  <!-- Delete Success Alert -->\r\n  <div class=\"alert alert-success alert-dismissible fade show\" *ngIf=\"deleteSuccess\" role=\"alert\">\r\n    <i class=\"fas fa-check-circle me-2\"></i>\r\n    <strong>Success!</strong> {{ deleteSuccess }}\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"clearDeleteSuccess()\"></button>\r\n  </div>\r\n\r\n  <!-- Loading Spinner -->\r\n  <div class=\"text-center py-5\" *ngIf=\"loading\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n    <p class=\"mt-2 text-muted\">Loading candidates from API...</p>\r\n  </div>\r\n\r\n  <!-- Tabs -->\r\n  <ul class=\"nav nav-tabs mb-3\" *ngIf=\"!loading\">\r\n    <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\r\n      <a class=\"nav-link\" [class.active]=\"activeTab === tab\" (click)=\"setTab(tab)\">\r\n        {{ tab }}\r\n        <span class=\"badge bg-light text-dark ms-1\">\r\n          {{ getCandidateCountForTab(tab) }}\r\n        </span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n\r\n  <!-- No Candidates Message -->\r\n  <div class=\"text-center py-5\" *ngIf=\"!loading && candidates.length === 0 && !error\">\r\n    <i class=\"fas fa-users fa-3x text-muted mb-3\"></i>\r\n    <h4 class=\"text-muted\">No Candidates Found</h4>\r\n    <p class=\"text-muted\">There are no candidates available at the moment.</p>\r\n    <a [routerLink]=\"['/candidates/create-candidate']\" class=\"btn brand-green-btn\">\r\n      <i class=\"fas fa-plus me-2\"></i>Add Your First Candidate\r\n    </a>\r\n  </div>\r\n\r\n  <!-- Table -->\r\n  <div class=\"table-responsive\" *ngIf=\"!loading && candidates.length > 0\">\r\n    <table class=\"table table-hover align-middle candidates-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Applied Role</th>\r\n          <th>Employment Type</th>\r\n          <th>Work Type</th>\r\n          <th>Applied Date</th>\r\n          <th>Attachment</th>\r\n          <th>Status</th>\r\n          <th>Score (%)</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let candidate of filteredCandidates\"\r\n        style=\"cursor:pointer\"\r\n    [routerLink]=\"['/candidates/view-candidate', candidate.id]\">\r\n          <td>\r\n            <div>{{ candidate.name }}</div>\r\n            <div class=\"text-muted small\">{{ candidate.role }}</div>\r\n          </td>\r\n          <td>\r\n            <div>{{ candidate.appliedRole }}</div>\r\n            <div class=\"text-muted small\">{{ candidate.department }}</div>\r\n          </td>\r\n          <td>{{ candidate.employmentType }}</td>\r\n          <td>{{ candidate.workType }}</td>\r\n          <td>{{ candidate.appliedDate | date:'shortDate' }}</td>\r\n          <td>\r\n            <div>\r\n              <i class=\"far fa-file-alt me-1\"></i>{{ candidate.attachments }}\r\n            </div>\r\n            <!-- <div *ngIf=\"candidate.attachments.length === 0\" class=\"text-muted small\">\r\n              No attachments\r\n            </div> -->\r\n          </td>\r\n          <td>\r\n            <span class=\"badge status-badge\"\r\n              [ngClass]=\"{\r\n                'bg-applied': candidate.status === 'Applied',\r\n                'brand-green-bg': candidate.status === 'Interview',\r\n                'brand-purple-bg': candidate.status === 'In-Review' || candidate.status === 'Hired',\r\n                'brand-red-bg': candidate.status === 'Rejected',\r\n                'bg-info': candidate.status === 'Shortlisted'\r\n              }\">\r\n              {{ candidate.status }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <span class=\"score-circle\" [ngClass]=\"{\r\n                'score-green': candidate.score >= 80,\r\n                'score-yellow': candidate.score >= 50 && candidate.score < 80,\r\n                'score-red': candidate.score < 50\r\n              }\">\r\n              <i class=\"fas fa-circle-notch\"></i>\r\n            </span>\r\n            {{ candidate.score }}%\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex gap-1\">\r\n              <!-- Edit Button -->\r\n              <a [routerLink]=\"['/candidates/edit-candidate', candidate.id]\" \r\n                 class=\"btn btn-outline-primary btn-sm\" \r\n                 title=\"Edit Candidate\"\r\n                 [class.disabled]=\"isDeletingCandidate(candidate.id)\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </a>\r\n              \r\n              <!-- Delete Button -->\r\n              <button class=\"btn btn-outline-danger btn-sm\" \r\n                      title=\"Delete Candidate\"\r\n                      (click)=\"deleteCandidate(candidate)\"\r\n                      [disabled]=\"isDeletingCandidate(candidate.id)\">\r\n                <span *ngIf=\"isDeletingCandidate(candidate.id)\" \r\n                      class=\"spinner-border spinner-border-sm\" \r\n                      role=\"status\">\r\n                </span>\r\n                <i class=\"fas fa-trash\" *ngIf=\"!isDeletingCandidate(candidate.id)\"></i>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Results Count -->\r\n  <div class=\"mt-3 text-muted\" *ngIf=\"!loading && candidates.length > 0\">\r\n    <small>\r\n      Showing {{ filteredCandidates.length }} of {{ candidates.length }} candidates\r\n      <span *ngIf=\"activeTab !== 'All'\"> in {{ activeTab }} status</span>\r\n    </small>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clearError", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "error", "_r3", "clearDeleteSuccess", "deleteSuccess", "tab_r5", "_r4", "$implicit", "setTab", "\u0275\u0275classProp", "activeTab", "getCandidateCountForTab", "\u0275\u0275template", "CandidatesComponent_ul_24_li_1_Template", "\u0275\u0275property", "tabs", "\u0275\u0275pureFunction0", "_c0", "candidate_r7", "_r6", "deleteCandidate", "CandidatesComponent_div_26_tr_23_span_34_Template", "CandidatesComponent_div_26_tr_23_i_35_Template", "\u0275\u0275pureFunction1", "_c1", "id", "\u0275\u0275textInterpolate", "name", "role", "appliedRole", "department", "employmentType", "workType", "\u0275\u0275pipeBind2", "appliedDate", "attachments", "\u0275\u0275pureFunction5", "_c2", "status", "\u0275\u0275pureFunction3", "_c3", "score", "isDeletingCandidate", "_c4", "CandidatesComponent_div_26_tr_23_Template", "filteredCandidates", "CandidatesComponent_div_27_span_3_Template", "\u0275\u0275textInterpolate2", "length", "candidates", "CandidatesComponent", "apiService", "loading", "deletingCandidateId", "constructor", "ngOnInit", "loadCandidates", "getCandidates", "subscribe", "next", "console", "log", "loadFallbackCandidates", "ApiService", "getFallbackCandidates", "filter", "c", "tab", "refreshCandidates", "candidate", "confirm", "setTimeout", "includes", "candidateId", "undefined", "\u0275\u0275directiveInject", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CandidatesComponent_div_21_Template", "CandidatesComponent_div_22_Template", "CandidatesComponent_div_23_Template", "CandidatesComponent_ul_24_Template", "CandidatesComponent_div_25_Template", "CandidatesComponent_div_26_Template", "CandidatesComponent_div_27_Template", "CommonModule", "NgClass", "NgForOf", "NgIf", "DatePipe", "RouterLink", "styles"]
}
