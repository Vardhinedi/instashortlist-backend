{
  "version": 3,
  "sources": ["src/app/jobs/jobs.component.ts", "src/app/jobs/jobs.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ApiService, Job } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-jobs',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink],\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.css']\r\n})\r\nexport class JobsComponent implements OnInit {\r\n  jobs: Job[] = [];\r\n  isGridView = true;\r\n  loading = false;\r\n  error: string | null = null;\r\n  deletingJobId: number | null = null;\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadJobs();\r\n  }\r\n\r\n  loadJobs() {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    this.apiService.getJobs().subscribe({\r\n      next: (jobs) => {\r\n        console.log('Jobs loaded successfully:', jobs);\r\n        this.jobs = jobs;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading jobs:', error);\r\n        this.error = error;\r\n        this.loading = false;\r\n        \r\n        // Fallback to static data if API fails\r\n        this.loadFallbackJobs();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadFallbackJobs() {\r\n    console.log('Loading fallback jobs due to API error');\r\n    this.jobs = ApiService.getFallbackJobs();\r\n  }\r\n\r\n  toggleView(isGrid: boolean) {\r\n    this.isGridView = isGrid;\r\n  }\r\n\r\n  postJob(jobId: number, jobTitle: string) {\r\n    console.log(`Posting job ID: ${jobId} - ${jobTitle} to hiring platforms`);\r\n    // Placeholder for posting logic\r\n  }\r\n\r\n  refreshJobs() {\r\n    this.loadJobs();\r\n  }\r\n\r\n  // Clear error message\r\n  clearError() {\r\n    this.error = null;\r\n  }\r\n\r\n  // DELETE Job functionality\r\n  deleteJob(job: Job) {\r\n    if (!job.id) {\r\n      console.error('Job ID is required for deletion');\r\n      return;\r\n    }\r\n\r\n    const confirmDelete = confirm(`Are you sure you want to delete \"${job.title}\"? This action cannot be undone.`);\r\n    \r\n    if (confirmDelete) {\r\n      this.deletingJobId = job.id;\r\n      \r\n      this.apiService.deleteJob(job.id).subscribe({\r\n        next: () => {\r\n          console.log(`Job ${job.title} deleted successfully`);\r\n          // Remove the job from the local array\r\n          this.jobs = this.jobs.filter(j => j.id !== job.id);\r\n          this.deletingJobId = null;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting job:', error);\r\n          this.deletingJobId = null;\r\n          \r\n          // Show error message temporarily\r\n          const errorMsg = this.error;\r\n          this.error = `Failed to delete job: ${error}`;\r\n          setTimeout(() => {\r\n            this.error = errorMsg;\r\n          }, 3000);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper method to check if a job is being deleted\r\n  isDeletingJob(jobId: number | undefined): boolean {\r\n    return this.deletingJobId === jobId;\r\n  }\r\n}", "<div class=\"container mt-4 jobs-bg\">\r\n  <div class=\"jobs-floating-container p-4 mb-4\">\r\n    <!-- Top Bar -->\r\n    <div class=\"top-bar d-flex flex-wrap justify-content-between align-items-center mb-3 gap-3\">\r\n      <div class=\"d-flex flex-grow-1 gap-2\">\r\n        <input class=\"form-control\" style=\"max-width:320px;\" placeholder=\"Search position, department, etc\" />\r\n        <button class=\"btn btn-outline-secondary\"><i class=\"fas fa-filter\"></i> Filter</button>\r\n      </div>\r\n      <div class=\"d-flex gap-2 ms-auto\">\r\n        <button class=\"btn brand-green-btn\">Import a Job</button>\r\n        <a [routerLink]=\"['/jobs/create-job']\" class=\"btn brand-green-btn\">Post Jobs</a>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Helper Nav Bar -->\r\n    <div class=\"d-flex flex-wrap justify-content-between align-items-center mb-3 gap-3\">\r\n      <div>\r\n        <span *ngIf=\"!loading\">Showing <b>{{ jobs.length }}</b> Jobs</span>\r\n        <span *ngIf=\"loading\">Loading jobs...</span>\r\n      </div>\r\n      <div class=\"d-flex align-items-center gap-2 ms-auto\">\r\n        <button class=\"btn btn-outline-secondary btn-sm\" (click)=\"refreshJobs()\" [disabled]=\"loading\">\r\n          <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"loading\"></i> Refresh\r\n        </button>\r\n        <span>Sort by:</span>\r\n        <select class=\"form-select form-select-sm\" style=\"width:auto;\" [disabled]=\"loading\">\r\n          <option>Last Updated</option>\r\n          <option>Title</option>\r\n          <option>Applicants</option>\r\n        </select>\r\n        <button class=\"btn layout-toggle\" [class.active]=\"isGridView\" (click)=\"toggleView(true)\" title=\"Grid View\" [disabled]=\"loading\">\r\n          <i class=\"fas fa-th\"></i>\r\n        </button>\r\n        <button class=\"btn layout-toggle\" [class.active]=\"!isGridView\" (click)=\"toggleView(false)\" title=\"Table View\" [disabled]=\"loading\">\r\n          <i class=\"fas fa-list\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error Alert -->\r\n  <div class=\"alert alert-warning alert-dismissible fade show\" *ngIf=\"error\" role=\"alert\">\r\n    <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n    <strong>API Error:</strong> {{ error }}\r\n    <br><small class=\"text-muted\">Showing fallback data instead.</small>\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"clearError()\"></button>\r\n  </div>\r\n\r\n  <!-- Loading Spinner -->\r\n  <div class=\"text-center py-5\" *ngIf=\"loading\">\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n      <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n    <p class=\"mt-2 text-muted\">Loading jobs from API...</p>\r\n  </div>\r\n\r\n  <!-- No Jobs Message -->\r\n  <div class=\"text-center py-5\" *ngIf=\"!loading && jobs.length === 0 && !error\">\r\n    <i class=\"fas fa-briefcase fa-3x text-muted mb-3\"></i>\r\n    <h4 class=\"text-muted\">No Jobs Found</h4>\r\n    <p class=\"text-muted\">There are no jobs available at the moment.</p>\r\n    <a [routerLink]=\"['/jobs/create-job']\" class=\"btn brand-green-btn\">\r\n      <i class=\"fas fa-plus me-2\"></i>Post Your First Job\r\n    </a>\r\n  </div>\r\n\r\n  <!-- Job Cards Grid -->\r\n  <div class=\"row g-4\" *ngIf=\"isGridView && !loading && jobs.length > 0\">\r\n    <div class=\"col-md-4\" *ngFor=\"let job of jobs\">\r\n      <div class=\"job-card p-3 shadow-sm\" style=\"cursor:pointer\"\r\n       [routerLink]=\"['/jobs/view-job', job.id]\">\r\n        <div class=\"d-flex justify-content-between align-items-start mb-2\">\r\n          <span class=\"job-icon brand-green\"><i class=\"fas fa-code\"></i></span>\r\n          <span class=\"badge job-status-badge\" [ngClass]=\"{\r\n              'brand-green-bg': job.isActive === true,\r\n              'brand-yellow-bg': job.isActive === false,\r\n            }\">\r\n            {{job.isActive ? 'Active' : 'Inactive'}}\r\n          </span>\r\n        </div>\r\n        <div class=\"fw-bold fs-5 mb-1\">{{ job.title }}</div>\r\n        <div class=\"text-muted mb-2\">{{ job.role }}</div>\r\n        <div class=\"mb-2\">\r\n          <span class=\"job-meta\"><i class=\"fas fa-briefcase me-1\"></i>&nbsp;&nbsp;{{job.level}}</span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span class=\"job-meta ms-3\"><i class=\"fas fa-clock me-1\"></i>&nbsp;&nbsp;{{job.type}}</span>\r\n        </div>\r\n        <div class=\"mb-2\">\r\n          <span class=\"badge text-dark\"\r\n            style=\"border-radius: 6px; padding: 10px; background-color: #eeecec;\">{{job.location}}</span>\r\n        </div>\r\n        <div class=\"fs-3 mb-4 pb-4 pt-4 border-bottom\"\r\n          style=\"border-bottom-width:2px; border-bottom-style:solid; border-bottom-color:#3d3d3d;\">${{job.salaryMin}}-${{job.salaryMax}}\r\n        </div>\r\n        \r\n        <!-- Action Buttons -->\r\n        <div class=\"d-flex gap-2 mt-3\">\r\n          <a [routerLink]=\"['/jobs/edit-job', job.id]\" class=\"btn btn-outline-primary btn-sm flex-fill\">\r\n            <i class=\"fas fa-edit me-1\"></i>Edit\r\n          </a>\r\n          <button class=\"btn btn-outline-danger btn-sm flex-fill\" \r\n                  (click)=\"deleteJob(job)\" \r\n                  [disabled]=\"isDeletingJob(job.id)\">\r\n            <i class=\"fas fa-trash me-1\" [class.fa-spinner]=\"isDeletingJob(job.id)\" [class.fa-spin]=\"isDeletingJob(job.id)\"></i>\r\n            {{isDeletingJob(job.id) ? 'Deleting...' : 'Delete'}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Job Table View -->\r\n  <div *ngIf=\"!isGridView && !loading && jobs.length > 0\">\r\n    <table class=\"table table-hover align-middle job-table-view\">\r\n      <thead class=\"table-head\">\r\n        <tr>\r\n          <th>Position</th>\r\n          <th>Department</th>\r\n          <th>Status</th>\r\n          <th>Level</th>\r\n          <th>Type</th>\r\n          <th>Salary</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let job of jobs\" style=\"cursor:pointer\"\r\n    [routerLink]=\"['/jobs/view-job', job.id]\">\r\n          <td>\r\n            <span class=\"job-icon-table brand-green me-2\"><i class=\"fas fa-code\"></i></span>\r\n            {{ job.title }}\r\n          </td>\r\n          <td>{{ job.role }}</td>\r\n          <td>\r\n            <span class=\"badge job-status-badge\" [ngClass]=\"{\r\n              'brand-green-bg': job.isActive === true,\r\n              'brand-yellow-bg': job.isActive === false,\r\n            }\">\r\n              {{ job.isActive ? 'Active' : 'Inactive' }}\r\n            </span>\r\n          </td>\r\n          <td>{{ job.level }}</td>\r\n          <td>{{ job.type }}</td>\r\n          <td>${{ job.salaryMin }}-{{ job.salaryMax }}</td>\r\n          <td>\r\n            <div class=\"d-flex gap-1\">\r\n              <a [routerLink]=\"['/jobs/edit-job', job.id]\" class=\"btn btn-outline-primary btn-sm\" title=\"Edit Job\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </a>\r\n              <button class=\"btn btn-outline-danger btn-sm\" \r\n                      (click)=\"deleteJob(job)\" \r\n                      [disabled]=\"isDeletingJob(job.id)\"\r\n                      title=\"Delete Job\">\r\n                <i class=\"fas fa-trash\" [class.fa-spinner]=\"isDeletingJob(job.id)\" [class.fa-spin]=\"isDeletingJob(job.id)\"></i>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "jobs", "length", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clearError", "\u0275\u0275textInterpolate1", "error", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "job_r4", "_r3", "$implicit", "deleteJob", "\u0275\u0275pureFunction1", "_c1", "id", "\u0275\u0275pureFunction2", "_c2", "isActive", "title", "role", "level", "type", "location", "\u0275\u0275textInterpolate2", "salaryMin", "salaryMax", "_c3", "isDeletingJob", "\u0275\u0275classProp", "\u0275\u0275template", "JobsComponent_div_37_div_1_Template", "job_r6", "_r5", "JobsComponent_div_38_tr_19_Template", "JobsComponent", "apiService", "isGridView", "loading", "deletingJobId", "constructor", "ngOnInit", "loadJobs", "getJobs", "subscribe", "next", "console", "log", "loadFallbackJobs", "ApiService", "getFallbackJobs", "toggleView", "isGrid", "postJob", "jobId", "jobTitle", "refreshJobs", "job", "confirm", "filter", "j", "errorMsg", "setTimeout", "\u0275\u0275directiveInject", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "JobsComponent_span_15_Template", "JobsComponent_span_16_Template", "JobsComponent_div_34_Template", "JobsComponent_div_35_Template", "JobsComponent_div_36_Template", "JobsComponent_div_37_Template", "JobsComponent_div_38_Template", "CommonModule", "NgClass", "NgForOf", "NgIf", "RouterLink", "styles"]
}
