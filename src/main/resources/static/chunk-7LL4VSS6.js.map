{
  "version": 3,
  "sources": ["src/app/jobs/view-job/view-job.component.ts", "src/app/jobs/view-job/view-job.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiService, Job, AssessmentTemplate } from '../../api.service';\r\n\r\n@Component({\r\n  selector: 'app-view-job',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './view-job.component.html',\r\n  styleUrls: ['../jobs.component.css', './view-job.component.css']\r\n})\r\nexport class ViewJobComponent implements OnInit {\r\n  job: Job | null = null;\r\n  loading = true;\r\n  error: string | null = null;\r\n  assessmentSteps: AssessmentTemplate[] = [];\r\n  loadingSteps = false;\r\n  stepsError: string | null = null;\r\n\r\n  constructor(private route: ActivatedRoute, private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.apiService.getJobById(id).subscribe({\r\n      next: (job) => {\r\n        this.job = job;\r\n        this.loading = false;\r\n        // Load assessment steps after job is loaded\r\n        this.loadAssessmentSteps(job.role);\r\n      },\r\n      error: (err) => {\r\n        // Try to find the job in fallback jobs\r\n        const fallback = ApiService.getFallbackJobs().find(j => j.id === id);\r\n        if (fallback) {\r\n          this.job = fallback;\r\n          this.error = 'Showing fallback job data (API unavailable)';\r\n          this.loadAssessmentSteps(fallback.role);\r\n        } else {\r\n          this.error = 'Job not found (API unavailable)';\r\n        }\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadAssessmentSteps(role: string) {\r\n    this.loadingSteps = true;\r\n    this.stepsError = null;\r\n\r\n    this.apiService.getAssessmentTemplatesByRole(role).subscribe({\r\n      next: (steps) => {\r\n        this.assessmentSteps = steps.sort((a, b) => a.stepOrder - b.stepOrder);\r\n        this.loadingSteps = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading assessment steps:', err);\r\n        this.stepsError = 'Failed to load assessment steps';\r\n        this.loadingSteps = false;\r\n        // Fallback to empty array\r\n        this.assessmentSteps = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getOptionLetter(index: number): string {\r\n    return String.fromCharCode(65 + index);\r\n  }\r\n}", "<div class=\"container mt-4 jobs-bg\">\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"loading\" class=\"text-center py-5\">\r\n    <div class=\"jobs-floating-container p-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 3rem; height: 3rem;\"></div>\r\n      <p class=\"mt-3 text-muted fs-5\">Loading job details...</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error\" class=\"jobs-floating-container p-4\">\r\n    <div class=\"alert alert-danger mb-0 border-0\" style=\"background-color: #f8d7da; border-radius: 12px;\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>{{ error }}\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Main Job Details -->\r\n  <div class=\"jobs-floating-container p-4 mb-4\" *ngIf=\"!loading && job\">\r\n    <!-- Header Section -->\r\n    <div class=\"top-bar mb-4\">\r\n      <div class=\"d-flex justify-content-between align-items-start mb-3\">\r\n        <div class=\"flex-grow-1\">\r\n          <div class=\"d-flex align-items-center mb-3\">\r\n            <span class=\"job-icon me-3\">\r\n              <i class=\"fas fa-code\"></i>\r\n            </span>\r\n            <div>\r\n              <h1 class=\"fw-bold mb-1\" style=\"font-size: 1.8rem; color: #222;\">{{ job.title }}</h1>\r\n              <div class=\"d-flex align-items-center gap-3 mt-2\">\r\n                <span class=\"badge job-status-badge\" [ngClass]=\"{\r\n                    'brand-green-bg': job.isActive === true,\r\n                    'brand-yellow-bg': job.isActive === false\r\n                  }\">\r\n                  <i class=\"fas\" [ngClass]=\"{\r\n                    'fa-check-circle': job.isActive === true,\r\n                    'fa-pause-circle': job.isActive === false\r\n                  }\" style=\"font-size: 0.8rem;\"></i>\r\n                  {{ job.isActive ? 'Active' : 'Inactive' }}\r\n                </span>\r\n                <span class=\"badge text-dark location-badge\">\r\n                  <i class=\"fas fa-map-marker-alt me-1\" style=\"font-size: 0.8rem;\"></i>\r\n                  {{ job.location }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex gap-2\">\r\n          <a routerLink=\"/jobs\" class=\"btn btn-outline-secondary\" style=\"border-radius: 8px;\">\r\n            <i class=\"fas fa-arrow-left me-1\"></i>Back\r\n          </a>\r\n          <a [routerLink]=\"['/jobs/edit-job', job.id]\" class=\"btn brand-green-btn\">\r\n            <i class=\"fas fa-edit me-1\"></i>Edit Job\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Job Overview Cards -->\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"info-card\">\r\n          <div class=\"info-card-icon brand-purple-bg\">\r\n            <i class=\"fas fa-building\"></i>\r\n          </div>\r\n          <div>\r\n            <div class=\"info-card-label\">Department</div>\r\n            <div class=\"info-card-value\">{{ job.role }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"info-card\">\r\n          <div class=\"info-card-icon brand-green-bg\">\r\n            <i class=\"fas fa-layer-group\"></i>\r\n          </div>\r\n          <div>\r\n            <div class=\"info-card-label\">Level</div>\r\n            <div class=\"info-card-value\">{{ job.level }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"info-card\">\r\n          <div class=\"info-card-icon brand-yellow-bg\">\r\n            <i class=\"fas fa-clock\"></i>\r\n          </div>\r\n          <div>\r\n            <div class=\"info-card-label\">Type</div>\r\n            <div class=\"info-card-value\">{{ job.type }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3 mb-3\">\r\n        <div class=\"info-card\">\r\n          <div class=\"info-card-icon\" style=\"background-color: #e3f2fd; color: #1976d2;\">\r\n            <i class=\"fas fa-users\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Salary Section -->\r\n    <div class=\"salary-section mb-4 p-4\"\r\n      style=\"background: linear-gradient(135deg, #f8f9ff 0%, #e8f5e8 100%); border-radius: 16px; border: 1px solid #e2e8f0;\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"salary-icon me-3\">\r\n          <i class=\"fas fa-dollar-sign\"></i>\r\n        </div>\r\n        <div>\r\n          <h5 class=\"mb-1 fw-bold\" style=\"color: #222;\">Salary Range</h5>\r\n          <div class=\"salary-range\">\r\n            <span class=\"salary-amount\">${{ job.salaryMin.toLocaleString() }}</span>\r\n            <span class=\"mx-2\" style=\"color: #666;\">-</span>\r\n            <span class=\"salary-amount\">${{ job.salaryMax.toLocaleString() }}</span>\r\n            <span class=\"text-muted ms-2\">per year</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Job Description -->\r\n    <div class=\"description-section\">\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <div class=\"section-icon me-2\">\r\n          <i class=\"fas fa-file-text\"></i>\r\n        </div>\r\n        <h4 class=\"mb-0 fw-bold\" style=\"color: #222;\">Job Description</h4>\r\n      </div>\r\n      <div class=\"description-content p-4\"\r\n        style=\"background: #f8f9fa; border-radius: 12px; border-left: 4px solid rgb(210, 245, 91);\">\r\n        <div style=\"white-space: pre-line; line-height: 1.6; color: #555;\">{{ job.description }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Assessment Steps Section -->\r\n  <div class=\"jobs-floating-container p-4 mb-4\" *ngIf=\"!loading && job\">\r\n    <div class=\"d-flex align-items-center mb-3\">\r\n      <div class=\"section-icon me-2\">\r\n        <i class=\"fas fa-clipboard-check\"></i>\r\n      </div>\r\n      <h4 class=\"mb-0 fw-bold\" style=\"color: #222;\">Assessment Steps</h4>\r\n    </div>\r\n\r\n    <!-- Loading State for Steps -->\r\n    <div *ngIf=\"loadingSteps\" class=\"text-center py-4\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 2rem; height: 2rem;\"></div>\r\n      <p class=\"mt-2 text-muted\">Loading assessment steps...</p>\r\n    </div>\r\n\r\n    <!-- Error State for Steps -->\r\n    <div *ngIf=\"stepsError\" class=\"alert alert-warning\" style=\"border-radius: 12px;\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>{{ stepsError }}\r\n    </div>\r\n\r\n    <!-- Assessment Steps List -->\r\n    <div *ngIf=\"!loadingSteps && !stepsError && assessmentSteps.length > 0\" class=\"steps-container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" *ngFor=\"let step of assessmentSteps; let i = index\">\r\n          <div class=\"assessment-step-card mb-3 p-4\" style=\"background: linear-gradient(135deg, #f8f9ff 0%, #fff 100%); \r\n                    border-radius: 16px; \r\n                    border: 1px solid #e2e8f0;\r\n                    transition: all 0.3s ease;\">\r\n            <div class=\"d-flex align-items-start\">\r\n              <div class=\"step-number-badge me-3\">\r\n                <span class=\"badge rounded-pill\" style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); \r\n                           color: white; \r\n                           width: 35px; \r\n                           height: 35px; \r\n                           display: flex; \r\n                           align-items: center; \r\n                           justify-content: center;\r\n                           font-weight: bold;\">\r\n                  {{ step.stepOrder }}\r\n                </span>\r\n              </div>\r\n              <div class=\"flex-grow-1\">\r\n                <h5 class=\"mb-2 fw-bold\" style=\"color: #222;\">{{ step.stepName }}</h5>\r\n\r\n                <!-- Question Section -->\r\n                <div *ngIf=\"step.question\" class=\"question-section mb-3\">\r\n                  <div class=\"question-label mb-2\">\r\n                    <i class=\"fas fa-question-circle me-2\" style=\"color: #667eea;\"></i>\r\n                    <strong>Question:</strong>\r\n                  </div>\r\n                  <div class=\"question-text p-3\" style=\"background: #f8f9fa; \r\n                            border-radius: 8px; \r\n                            border-left: 4px solid #667eea;\">\r\n                    {{ step.question }}\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Options Section -->\r\n                <div *ngIf=\"step.options\" class=\"options-section mb-3\">\r\n                  <div class=\"options-label mb-2\">\r\n                    <i class=\"fas fa-list me-2\" style=\"color: #28a745;\"></i>\r\n                    <strong>Options:</strong>\r\n                  </div>\r\n                  <div class=\"options-list\">\r\n                    <div *ngFor=\"let option of step.options.split(','); let optionIndex = index\"\r\n                      class=\"option-item mb-2\">\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <span class=\"option-letter me-2\" style=\"background: #e9ecef; \r\n                                   border-radius: 50%; \r\n                                   width: 25px; \r\n                                   height: 25px; \r\n                                   display: flex; \r\n                                   align-items: center; \r\n                                   justify-content: center; \r\n                                   font-size: 12px; \r\n                                   font-weight: bold;\">\r\n                          {{ getOptionLetter(optionIndex) }}\r\n                        </span>\r\n                        <span>{{ option.trim() }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Correct Answer Section -->\r\n                <div *ngIf=\"step.correctAnswer\" class=\"correct-answer-section mb-3\">\r\n                  <div class=\"answer-label mb-2\">\r\n                    <i class=\"fas fa-check-circle me-2\" style=\"color: #28a745;\"></i>\r\n                    <strong>Correct Answer:</strong>\r\n                  </div>\r\n                  <div class=\"answer-text p-2\" style=\"background: #d4edda; \r\n                            border-radius: 8px; \r\n                            border-left: 4px solid #28a745; \r\n                            color: #155724;\">\r\n                    {{ step.correctAnswer }}\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Type Badge -->\r\n                <div *ngIf=\"step.type\" class=\"type-section\">\r\n                  <span class=\"badge\" style=\"background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%); \r\n                             color: #2d3436; \r\n                             border-radius: 20px; \r\n                             padding: 8px 16px;\">\r\n                    <i class=\"fas fa-tag me-1\"></i>\r\n                    {{ step.type }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No Steps Message -->\r\n    <div *ngIf=\"!loadingSteps && !stepsError && assessmentSteps.length === 0\" class=\"no-steps-message text-center py-4\">\r\n      <div class=\"text-muted\">\r\n        <i class=\"fas fa-info-circle me-2\"></i>\r\n        No assessment steps found for this job role.\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Quick Actions Footer -->\r\n  <div class=\"jobs-floating-container p-4\" *ngIf=\"!loading && job\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <div class=\"d-flex align-items-center text-muted\">\r\n        <i class=\"fas fa-info-circle me-2\"></i>\r\n        <span>Job ID: {{ job.id }}</span>\r\n      </div>\r\n      <div class=\"d-flex gap-2\">\r\n        <a routerLink=\"/candidates\" class=\"btn btn-outline-success\" style=\"border-radius: 8px;\">\r\n          <i class=\"fas fa-eye me-1\"></i>View Candidates\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "error", "\u0275\u0275textInterpolate", "job", "title", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c0", "isActive", "_c1", "location", "\u0275\u0275pureFunction1", "_c2", "id", "role", "level", "type", "salaryMin", "toLocaleString", "salaryMax", "description", "stepsError", "step_r2", "question", "getOptionLetter", "optionIndex_r4", "option_r3", "trim", "\u0275\u0275template", "ViewJobComponent_div_4_div_8_div_2_div_10_div_6_Template", "options", "split", "correctAnswer", "ViewJobComponent_div_4_div_8_div_2_div_9_Template", "ViewJobComponent_div_4_div_8_div_2_div_10_Template", "ViewJobComponent_div_4_div_8_div_2_div_11_Template", "ViewJobComponent_div_4_div_8_div_2_div_12_Template", "stepOrder", "stepName", "ViewJobComponent_div_4_div_8_div_2_Template", "assessmentSteps", "ViewJobComponent_div_4_div_6_Template", "ViewJobComponent_div_4_div_7_Template", "ViewJobComponent_div_4_div_8_Template", "ViewJobComponent_div_4_div_9_Template", "loadingSteps", "length", "ViewJobComponent", "route", "apiService", "loading", "constructor", "ngOnInit", "Number", "snapshot", "paramMap", "get", "getJobById", "subscribe", "next", "loadAssessmentSteps", "err", "fallback", "ApiService", "getFallbackJobs", "find", "j", "getAssessmentTemplatesByRole", "steps", "sort", "a", "b", "console", "index", "String", "fromCharCode", "\u0275\u0275directiveInject", "ActivatedRoute", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ViewJobComponent_div_1_Template", "ViewJobComponent_div_2_Template", "ViewJobComponent_div_3_Template", "ViewJobComponent_div_4_Template", "ViewJobComponent_div_5_Template", "CommonModule", "NgClass", "NgForOf", "NgIf", "RouterModule", "RouterLink", "styles"]
}
